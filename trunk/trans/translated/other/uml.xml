<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/uml.xml,v
1.22 2005/02/05 16:52:57 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- Orig revision: 0.10 -->
<!-- Translator: edi15ta <edi15ta@gazeta.pl> -->
<!-- Status: Release -->
<!-- $Header: $ -->

<guide link="/doc/en/uml.xml">
<title>Przewodnik Developera Gentoo do testowania systemu z User-Mode
Linux</title>
<author title="Editor">
  <mail link="g2boojum@gentoo.org">Grant Goodyear</mail>
</author>
<author title="Editor"><!-- zhen@gentoo.org -->
  John Davis
</author>
<author title="Editor">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>

<abstract>
Ten przewodnik pokazuje developerom Gentoo jak ustawić i używać
user-mode linux do testowania potencjalnie groźnych zmian w systemie.
</abstract>

<license/>

<version>0.10</version>
<date>2005-02-05</date>

<chapter>
<title>Zdobycie User-Mode Linux</title>
<section>
<body>

<p>
Na stronie user-mode linux (<uri>http://user-mode-linux.sourceforge.net</uri>)
jest napisane, że user-mode linux pozwala użytkownikowi "uruchomić Linuksa
wewnątrz siebie". Ściślej, user-mode linux dostarcza wirtualną maszynę na 
której użytkownik może "u[r]uchomić "zarobaczone" oprogramowanie,
eksperymentować z nowymi jądrami lub dystrybucjami Linuksa i grzebać we
wnętrznościach Linuksa, wykonując wszystko to bez obaw o główne ustawienia
systemu". 
Eksperymentalne zmiany w rdzennych paczkach Gentoo takich jak: 
<e>sys-apps/baselayout</e> lub <e>sys-libs/glibc</e> mogą załamać system 
i uczynić go niebootowalnym; z user-mode linux możemy testować te zmiany 
bez obaw o zniszczenie naszego systemu. 
</p>

<p>
Instalacja user-mode linux jest w gruncie rzeczy identyczna z instalacją 
normalnego jądra. Najpierw instalujemy źródła jądra (z odpowiednimi łatkami dla
user-mode linux), a następnie konfigurujemy jądro user-mode linux w normalny
sposób. Począwszy od jądra 2.6.9, UML został dołączony do jądra vanilla. 
</p>

<pre caption="Instalowanie źródeł jądra UML">
<comment>(Zaczniemy instalować jądro vanilla 2.6, możesz również 
użyć usermode-sources)</comment>
# <i>emerge sys-kernel/development-sources</i>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig <comment>ARCH=um</comment></i>
# <i>make linux <comment>ARCH=um</comment></i>
# <i>cp linux /usr/local/bin/linux</i>
</pre>

<warn>
Fragment <e>ARCH=um</e> jest <e>bardzo</e> ważny!
</warn>

<p>
Należy upewnić się, że <path>/usr/local/bin</path> jest w ścieżkach dostępu.
Edytujemy <path>/etc/env.d/00basic</path> tak aby zmienna PATH zawierała
<path>/usr/local/bin</path> po czym uruchomiamy <c>env-update</c>
</p>

<pre caption="Edycja 00basic">
# <i>nano -w /etc/env.d/00basic</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
Aby właściwie przebiegł start Gentoo, jądro user-mode linux musi być tak
skonfigurowane, aby domyślnie <e>nie</e> montowało automatycznie
<path>/dev</path> (devfs). Chcemy także się upewnić, że <e>tmpfs</e> ("System
Plików Pamięci Wirtualnej") jest wkompilowane w jądro, ponieważ domyślnie
skrypty startowe Gentoo przechowują swoje informacje na małej partycji
tmpfs. (Binarne jądra dostępne na stronie user-mode automatycznie montują
<path>/dev</path>, i nie mają wkompilowanego tmpfs; tym się nie przejmujemy).
</p>

<p>
Zalecane jest przeczytanie dokumentacji do user-mode linux, ale główna
idea jest taka, że uruchamiając program <path>/usr/local/bin/linux</path>
inicjuje on jądro user-mode i stara się przywrócić system zachowany w pliku
<path>root_fs</path>, który powinien być umieszczony w katalogu w którym
obecnie pracujemy.
</p>

<p>
Nie będzie bolesne jeśli zostaną zainstalowane inne narzędzia user-mode linux.
</p>

<pre caption="Instalacja narzędzi UML">
# <i>emerge sys-apps/usermode-utilities</i>
</pre>

<p>
Te narzędzia ułatwiają połączenie sieciowe (pośród innych rzeczy) pomiędzy
user-mode linux, a hostem.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Tworzenie root_fs</title>
<section>
<title>Tworzenie Gentoo chroot</title>
<body>

<p>
Plik <path>root_fs</path> potrzebny do user-mode linux jest pojedynczym
plikiem, który zawiera cały system plików Gentoo. Aby stworzyć ten plik
potrzebne jest załączone wsparcie dla "Loopback device" w jądrze hosta(nie
user-mode). 
</p>

<p>
Tworzenie samego pliku <path>root_fs</path> będzie ostatnim krokiem. Najpierw
tworzymy system plików Gentoo w zwykłym chroot. Potrzebujemy tarballa ze stage,
którego można oddzielnie ściagnąć, wypakować z LiveCD lub wypakować z 
liveCD .iso.  
</p>

<pre caption="Montowanie liveCD .iso">
# <i>mkdir /mnt/loop</i>
# <i>mount -o loop /path/to/install-&lt;TAB&gt;.iso /mnt/loop</i>
</pre>

<p>
Ustawianie chroota jest w gruncie rzeczy identyczne do tego zwykłego podczas
budowania systemu Gentoo.
</p>

<pre caption="Tworzenie punktu montowania Gentoo chroot">
# <i>mkdir /mnt/gentoo</i>
# <i>cd /mnt/gentoo</i>
# <i>tar xvjpf /ściezka/do/stage&lt;TAB&gt;.tar.bz2</i>
</pre>

<p>
Następnie należy odmontować .iso, gdyż jest on już niepotrzebny.
</p>

<p>
Bootstrap i budowanie systemu w normalny sposób. Po prostu podczas
instalacji należy trzymać się instrukcji :).
</p>

<p>
Można dodać jakiekolwiek inne paczki. Nazwa wirtualnego hosta Gentoo jest
dowolna. W <path>/etc/fstab</path> należy zmienić <path>/dev/ROOT</path> na
<path>/dev/ubd/0</path> (z dowolnym systemem plików z ext2, ext3, lub reiserfs),
<path>/dev/SWAP</path> na <path>/dev/ubd/1</path>, i należy odkomentować
<path>/dev/BOOT</path>.
</p>

<p>
W tym miejscu należy ustawić hasło dla root'a.
</p>

<pre caption="Ustawianie hasła dla root'a">
# <i>passwd</i>
</pre>

<p>
Teraz potrzebujemy zrobić pewne zmiany w skryptach startowych. Usunąć
consolefont i keymaps z boot runlevel:
</p>

<pre caption="Usuwanie niepotrzebnych skryptów init">
# <i>rc-update del consolefont boot</i>
# <i>rc-update del keymaps boot</i>
</pre>

<p>
Wyjdź z chroota, odmontuj wszystko co masz zamontowane, zarchiwizuj,
przy pomocy tar, i posprzątaj.
</p>

<pre caption="Finalizowanie instalacji">
# <i>cd /mnt/gentoo</i>
# <i>tar cvjpf ~/gentoo.tbz2 *</i>
# <i>cd</i>
# <i>rm -rf /mnt/gentoo</i>
</pre>

</body>
</section>
<section>
<title>Tworzenie root_fs</title>
<body>

<p>
Nasz Gentoo chroot zajmuje niemal 300 MB, więc <path>root_fs</path> musi
mieć co najmniej taki rozmiar. Jako rozsądny rozmiar weźmiemy 0.5 GB.
</p>

<pre caption="Tworzenie plików UML">
# <i>dd if=/dev/zero of=root_fs seek=500 count=1 bs=1M</i>
# <i>mke2fs -F root_fs</i>
# <i>mount -o loop root_fs /mnt/loop</i>
# <i>tar xvjpf gentoo.tbz2 -C /mnt/loop</i>
# <i>umount /mnt/loop</i>
</pre>

<p>
Miło by było mieć również partycję swap o rozmiarze 0.5 GB.
</p>

<pre caption="Tworzenie partycji swap">
# <i>dd if=/dev/zero of=swap_fs seek=500 count=1 bs=1M</i>
# <i>mkswap -f swap_fs</i>
</pre>

<p>
Teraz zobaczmy czy działa!
</p>

<pre caption="Uruchomienie wątków jądra UML">
# <i>linux ubd0=root_fs ubd1=swap_fs</i>
</pre>

<p>
User-mode linux używa xterma jako wirtualne konsole, które są uruchamiane
podczas startu systemu, więc należy się upewnić, że terminal spod którego
uruchamiamy user-mode linux ma poprawnie ustawioną zmienną $DISPLAY (wraz z
odpowiednimi prawami dostępu xhost/xauth).
</p>

<p>
Teraz już można logować się do Gentoo user-mode linux. Jedynym powodem, że
Gentoo user-mode linux nie jest w pełni funkcjonalnym systemem, jest połączenie
sieciowe wirtualnej maszyny z hostem.  
</p>

</body>
</section>
</chapter>

<chapter>
<title>Połączenie sieciowe</title>
<section>
<body>

<p>
Powinno upewnić się, że jądro hosta ma następujące ustawienia wkompilowane jako
moduły:
</p>

<pre caption="Konfiguracja jądra hosta">
Networking --&gt;
  IP: Netfilter Configuration --&gt;
    IP tables support --&gt;
      Full NAT --&gt;
        &lt;M&gt; MASQUERADE target support 
    
    Network Device Support --&gt; 
      &lt;M&gt; TUN/TAP Support
</pre>

<p>
Należy uruchomić następujące polecenia na maszynie <e>hosta</e>:
</p>

<pre caption="Ustawianie połaczenia sieciowego">
# <i>modprobe tun</i>
<comment>(Jeśli otrzymano tu błąd KRYTYCZNY, należy usunąć /dev/net/tun i
spróbować ponownie)</comment>
# <i>modprobe iptable_nat</i>
# <i>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</i>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
</pre>

<p>
Linia dotycząca iptables ustawia IP maskujące pomiędzy prywatną siecią, poprzez
którą user-mode system będzie połączony z internetem (w naszym przypadku
osiągalne poprzez <c>eth0</c>).  Linia echo włącza przekazywanie pakietów
pomiędzy prywatną siecią, a naszym interfejsem, którego domyślną bramą jest (dla
nas) eth0.
</p>

<p>
Teraz uruchomimy user-mode system i zobaczymy czy działa połączenie sieciowe.
</p>

<pre caption="Uruchamianie UML">
# <i>linux ubd0=root_fs ubd1=swap_fs eth0=tuntap,,,192.168.0.254</i>
<comment>(należy zalogować się do user-mode system)</comment>
# <i>ifconfig eth0 192.168.0.1 up</i>
# <i>ping -c 2 192.168.0.254</i>
PING 192.168.0.254 (192.168.0.254): 56 octets data
64 octets from 192.168.0.254: icmp_seq=0 ttl=255 time=0.8 ms
64 octets from 192.168.0.254: icmp_seq=1 ttl=255 time=0.6 ms

--- 192.168.0.254 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.6/0.7/0.8 ms
# <i>route add default gw 192.168.0.254</i>
# <i>netstat -rn</i>
Kernel IP routing table
Destination  Gateway        Genmask        Flags MSS Window irtt Iface
192.168.0.0  0.0.0.0        255.255.255.0  U      40 0         0 eth0
0.0.0.0      192.168.0.254  0.0.0.0        UG     40 0         0 eth0
# <i>scp user@192.168.0.254:/etc/resolv.conf /etc/resolv.conf</i> <comment>(if
needed)</comment>
# <i>ping -c 2 www.gentoo.org</i>
PING www.gentoo.org (207.170.82.202): 56 octets data
64 octets from 207.170.82.202: icmp_seq=0 ttl=240 time=119.6 ms
64 octets from 207.170.82.202: icmp_seq=1 ttl=240 time=92.0 ms

--- www.gentoo.org ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 92.0/105.8/119.6 ms
</pre>

<p>
W user-mode system powinno się przypisać interfejsowi user-mode eth0 prywatny
adres IP 192.168.0.1 i po czym uruchomiamy ten interfejs.  Host ma prywatny
adres IP 192.168.0.254, pingujemy go aby się upewnić czy połączenie
sieciowe w rzeczywistości działa. Linia route dodaje domyślną bramę (nasz host).
(jeśli konieczne) Używamy scp aby otrzymać działający
<path>/etc/resolv.conf</path> i używamy ping www.gentoo.org aby się
upewnić, że tłumaczenie nazw (i ogólnie dostęp do internetu) z user-mode system
działa. Teraz user-mode system może wykonać <c>emerge</c> na życzenie!
</p>

</body>
</section>
</chapter>
<chapter>
<title>Testowanie .iso</title>
<section>
<body>

<p>
Być może prawdziwie idealnym testowaniem Gentoo byłby start .iso z user-mode
linux i wykonanie pełnej instalacji Gentoo we wnętrzu naszego wirtualnego
user-mode linux system.
</p>

<p>
Start .iso, lub w rzeczywistości initrd z .iso, jest całkiem prosty.
</p>

<pre caption="Start ISO">
# <i>mount -o loop /path/to/install-&lt;TAB&gt;.iso /mnt/loop</i>
# <i>cp /mnt/loop/isolinux/gentoo.igz .</i>
# <i>linux load_ramdisk=1 prompt_ramdisk=0 ramdisk_size=22000 \</i>
&gt; <i>initrd=rescue.gz root=/dev/ram0 ubd0=root_fs ubd1=swap_fs \</i>
&gt; <i>ubd2=/dev/cdroms/cdrom0 eth0=tuntap,,,192.168.0.254</i>
</pre>

<p>
Teraz można podążać słowo w słowo według instrukcji instalacji Gentoo,
jednakże trzeba wiedzieć, że systemem plików root będzie
<path>/dev/ubd/0</path>, "partycją" swap będzie <path>/dev/ubd/1</path>, a CD
rom będzie <path>/dev/ubd/2</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Zasoby</title>
<section>
<body>

<ul>
  <li>
    <uri link="http://edeca.net/articles/bridging/index.html">Bridging with
    UML</uri>
  </li>
  <li>
    <uri link="http://user-mode-linux.sourceforge.net/">UML Homepage</uri>
  </li>
  <li>
    <uri link="http://www.theshore.net/~caker/uml/">Caker's UML Notes</uri>
  </li>
  <li>
    <uri link="http://sourceforge.net/mailarchive/forum.php?forum_id=3647">UML
    Mailinglist archives</uri>
  </li>
</ul>

</body>
</section>
</chapter>

</guide>
