<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Orig revision: 1.27 -->
<!-- Translator: lucass <lucass@gentoo.pl> -->
<!-- Title: Konfiguracja Jądra -->
<!-- Status: Ukończono -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /cvsroot/gentoo-doc-pl/trans/translated/handbook/Attic/hb-install-kernel.xml,v 1.12 2004/01/13 13:29:46 lcs Exp $ -->

<sections>
<section>
<title>Instalacja Źródeł</title>
<subsection>
<title>Wybór Jądra</title>
<body>

<p>
Sercem każdej dystrybucji jest jądro Linux. Stanowi ono interfejs pomiędzy
programami użytkownika a sprzętem. Gentoo dostarcza użytkownikom
różne źródła kerneli. Pełna lista wraz z opisami znajduje się w
<uri link="/doc/en/gentoo-kernel.xml">Przewodniku Jąder Gentoo</uri>. 
</p>

<p>
Dla platformy x86 udostępniamy między innymi <c>vanilla-sources</c>
(standardowe jądro, rozwijane przez developerów linuksa),
<c>gentoo-sources</c> (jądro wzbogacone o łatki poprawiające
wydajność), <c>gentoo-dev-sources</c> (jądro z serii 2.6
z łatkami poprawiającymi wydajność, stabilność oraz funkcjonalność),
<c>xfs-sources</c> (jądro z aktualnym sterownikiem do XFS),
<c>gs-sources</c> (jądro z łatkami przeznaczonymi dla serwerów),
<c>gaming-sources</c> (jądro wzbogacone poprawkami przeznaczonymi
dla graczy), ...
</p>


<p>
Dla platformy Alpha udostępniamy <c>vanilla-sources</c> (standardowe
jądro, rozwijane przez developerów Linuksa), <c>alpha-sources</c>
(jądro zoptymalizowane dla użytkowników Alpha) oraz <c>compaq-sources</c>
(jądro używane dla Alpha przez RedHata, rozwijane przez Compaq).
</p>

<p>
Dla platformy SPARC udostępniamy <c>vanilla-sources</c> (standardowe
jądro, rozwijane przez developerów linuksa) oraz
<c>sparc-sources</c> (jądro zoptymalizowane dla użytkowników SPARC).
</p>
<p>
Użytkownicy platformy MIPS mogą wybierać spośród <c>mips-sources</c> (domyśnego
jądra dla tej architektury) oraz <c>mips-prepatch-sources</c> (rozwojowej wersji
tego jądra).
</p>
<p>
Dla architektury AMD64 udostępniamy <c>gentoo-dev-sources</c> (jądro z serii 2.6
z łatkami poprawiającymi stabilność, wydajność oraz obsługę sprzętu dla amd64).
</p>
<p>
Dostarczamy także jądra zoptymalizowane dla innych architektur:
<c>hppa-sources</c> (HPPA) oraz <c>ppc-sources</c> (PowerPC).
</p>

<p>
Za pomocą <c>emerge</c> zainstalujemy wybrane źródła jądra. Od tej pory
będziemy używać <c>emerge --usepkg</c>, pobierającego i instalującego
prekompilowane pakiety (dla użytkowników GRP). Opcję <c>--usepkg</c>
można zastąpić skrótem <c>-k</c>. Jeśli nie zamierzasz korzystać
z GRP, powinieneś ją pominąć.
</p>

<p>
W kolejnym przykładzie pokażemy jak zainstalować <c>vanilla-sources</c>
(jako że <c>gentoo-sources</c> nie jest dostępne dla wszystkich
architektur). Oczywiście powinieneś je zastąpić wybranym kernelem.
</p>

<pre caption="Instalacja źródeł jądra">
# <i>emerge --usepkg vanilla-sources</i>
</pre>

<p>
W <path>/usr/src</path> powstanie symlink <path>linux</path> wskazujący
na wybrane źródła jądra:
</p>

<pre caption="Wyświetlanie symlinka do źródła jąder">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.22
</pre>

<p>
Jeśli coś jest nie tak z symlinkiem (na przykład wskazuje na inne źródła) możesz
go podmienić:
</p>

<pre caption="Modyfikacja symlinka do źródła jąder">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.4.22 /usr/src/linux</i>
</pre>

<p>
Nadszedł czas na konfigurację i kompilację naszych źródeł. Użytkownicy
platformy x86 i pochodnych mogą skorzystać z <c>genkernel</c>.
Zbuduje on standardowe jądro, takie jakie znajduje się na LiveCD.
Najpierw wyjaśnimy jednak ręczną metodę konfiguracji, jako że
umożliwia ona znacznie lepszą optymalizację.
</p>

<p>
Jeżeli chcesz ręcznie skonfigurować jądro, przejdź do <uri
link="#doc_chap2">Domyślnie: Ręczna konfiguracja</uri>. Użytkownicy
architektury x86 chcący skorzystać z <c>genkernel</c> powinni
przeczytać <uri
link="#doc_chap3">Alternatywnie: Używanie genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Domyślnie: Ręczna konfiguracja</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Ręczna konfiguracja jądra często postrzegana jest jako najtrudniejsza
rzecz, przez którą przejść musi każdy użytkownik Linuksa. Nic bardziej
mylnego -- po konfiguracji kilku kerneli zapomnisz, że miałeś z tym
jakiekolwiek problemy ;)
</p>

<p>
Jednemu <e>nie można</e> zaprzeczyć: musisz dobrze znać swój komputer
zanim rozpoczniesz ręczną konfigurację. Większość informacji zdobędziesz
przeglądając zawartość <path>/proc/pci</path> (lub używając <c>lspci</c>
jeśli jest dostępne). Aby przejrzeć listę modułów, których używa LiveCD
skorzystaj z <c>lsmod</c> (to dobra wskazówka dotycząca rzeczy wartych
włączenia).
</p>

<p>
Teraz przejdź do katalogu ze źródłami i uruchom <c>make menuconfig</c>.
Uruchomi się narzędzie konfiguracyjne oparte na ncurses.
</p>

<pre caption="Uruchamianie menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Twoim oczom ukaże się kilkanaście sekcji. Zacznijmy od pokazania tych
opcji, które musisz aktywować (w przeciwnym wypadku Gentoo nie zadziała,
lub zadziała nieprawidłowo).
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja Niezbędnych Opcji</title>
<body>

<p>
Przede wszystkim, włącz możliwość korzystania z kodu/sterowników rozwojowych
i eksperymentalnych. Jeśli tego nie zrobisz, nie będziesz mógł włączyć
wielu ważnych opcji:
</p>

<pre caption="Aktywacja eksperymentalnego kodu/sterowników">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers"
</pre>

<p>
Przejdź następnie do <c>File Systems</c> i zaznacz wsparcie dla wykorzystywanych
systemów plików. <e>Nie</e> kompiluj ich jako moduły, gdyż Gentoo nie będzie
mogło zamontować partycji. Dodatkowo włącz <c>Virtual memory</c>, <c>/proc
file system</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Wybór niezbędnych systemów plików">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>(Odznacz tę opcję jeśli nie posiadasz jądra 2.6)</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Wybierz jedno lub więcej z poniższych ustawień w zależności od wymagań)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
W jądrach 2.6, część z wymienionych opcji znajduje się w sekcji <c>Pseudo
filesystems</c>, będącej częścią <c>File systems</c>.
</note>

<p>
Jeśli do połączenia z Internetem używasz PPPoE, powinieneś wybrać następujące
opcje:
</p>

<pre caption="Wybór niezbędnych sterowników PPPoE">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
W jądrach 2.6,  wymienione opcje znajdują się w sekcji <c>Networking
support</c>, będącej częścią <c>Device Drivers</c>.
</note>
<p>
Dwie kolejne opcje, dotyczące kompresji nie zaszkodzą, jakkolwiek nie są
również wymagane. Podobnie jak <c>PPP over Ethernet</c>, przydatna  tylko
wówczas, kiedy do pracy w trybie jądra PPPoE zostanie skonfigurowany
<c>rp-pppoe</c>.
</p>
<!-- TODO reactivate when LVM2 instructions are boarded
<p>
Użytkownicy LVM, powinni go włączyć:
</p>

<pre caption="Aktywacja wsparcia dla LVM">
Multi-device support (RAID and LVM) -&gt;
  [*] Multiple devices driver support (RAID and LVM)
  &lt;*&gt;  Logical volume manager (LVM) support
</pre>
-->
<note>
W jądrach 2.6, wymienione opcje znajdują się w sekcji <c>Device Drivers</c>.
</note>
<p>
Jeśli taką posiadasz, nie zapomnij o wkompilowaniu wsparcia dla swojej karty sieciowej.
</p>

<p>
Teraz pokażemy ważne ustawienia zależne od używanej architektury:
</p>

<ul>
<li><uri link="#doc_chap2_sect3">Aktywacja opcji zalecanych dla x86</uri></li>
<li><uri link="#doc_chap2_sect4">Aktywacja opcji zalecanych dla Alpha</uri></li>
<li><uri link="#doc_chap2_sect5">Aktywacja opcji zalecanych dla HPPA</uri></li>
<li><uri link="#doc_chap2_sect6">Aktywacja opcji zalecanych dla PPC</uri></li>
<li><uri link="#doc_chap2_sect7">Aktywacja opcji zalecanych dla SPARC</uri></li>
<li><uri link="#doc_chap2_sect7">Aktywacja opcji zalecanych dla MIPS</uri></li>
<li><uri link="#doc_chap2_sect7">Aktywacja opcji zalecanych dla AMD64</uri></li>
</ul>

</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla x86</title>
<body>

<p>
Posiadacze procesorów Intela, wspierających technologię HyperThreading (tm)
podobnie jak użytkownicy maszyn wieloprocesorowych powinni aktywować
"Symmetric multi-processing support":
</p>

<pre caption="Włączanie wsparcia dla SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla Alpha</title>
<body>

<p>
Użytkownikom platformy Alpha polecamy włączenie następujących opcji:
</p>

<pre caption="Ustawienia specyficzne dla Alpha">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>
<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla HPPA</title>
<body>

<p>
Posiadacze myszy lub klawiatur HIL powinni wkompilować dla nich wsparcie.
</p>

<pre caption="Aktywacja wsparcia dla HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Jeśli nie posiadasz myszy korzystającej z portu HIL, włącz tylko zasadnicze wsparcie:
</p>

<pre caption="Podstawowe wsparcie dla HIL">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Jakkolwiek jeżeli chcesz <e>pełnej</e> obsługi HIL, wybierz następujące opcje:
</p>

<pre caption="Pełne wsparcie dla HIL">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>
<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla PPC</title>
<body>

<p>
Przede wszystkim, wyłącz wsparcie dla kodów klawiszy ADB:
</p>

<pre caption="Wyłączanie wsparcia dla kodów klawiszy ADB">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Wybierz również prawidłową obsługę RTC (<e>wyłącz</e> opcję <c>Enhaced RTC</c>):
</p>

<pre caption="Aktywacja prawidłowej obsługi RTC">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
Użytkownicy sprzętu OldWorld prawdopodobnie zechcą obsługi HFS, aby mogli
skopiować gotowe jądra na partycję MacOS.
</p>

<pre caption="Aktywacja wsparcia dla HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla SPARC</title>
<body>

<p>
Zacznijmy od włączenia obsługi SBUS/UPA:
</p>

<pre caption="Aktywacja SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Wyłącznie dla adapterów UPA, wykorzystywanych w wielu Ultra'ch)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Wyłącznie dla adapterów SBUS, wykorzystywanych w wielu SPARCStation)</comment>
</pre>

<p>
Oczywiście potrzebujesz obsługi OBP:
</p>

<pre caption="Aktywacja OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Podobnie jak wsparcia dla SCSI:
</p>

<pre caption="Aktywacja wsparcia dla SCSI">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Wyłącznie dla SPARC ESP)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Wyłącznie dla kontrolerów SBUS od PTI lub QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Wyłącznie dla Ultra 60)</comment>
</pre>

<p>
Aby aktywować obsługę karty sieciowej, zaznacz jedną z następujących opcji:
</p>

<pre caption="Aktywacja obsługi sieci">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Wyłącznie dla SPARCStation, starszych Ultra oraz jako opcja Sbus)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Wyłącznie dla Ultra; wspiera również "qfe" quad-ethernet na PCI i Sbus)</comment>
</pre>

<p>
Po ukończeniu budowania jądra, sprawdź jego rozmiar:
</p>


<pre caption="Sprawdzanie rozmiaru jądra">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Jeśli (nieskompresowany) kernel zajmuje ponad 2.5Mb (dla Sparc32) lub 3.5Mb (dla
Sparc64), będziesz musiał poprawić konfigurację aby go uszczuplić. Jednym
ze sposobów nie rezygnowania z funkcjonalności na korzyść rozmiarów jest
umieszczenie jej części w modułach. Zignorowanie tego ostrzeżenia może doprowadzić
do stworzenia nie uruchamiającego się jądra.
</p>

<p>
W przypadku gdy rozmiar jądra tylko niewiele przekracza limit, możesz spróbować
je zmniejszyć programem <c>strip</c>:
</p>

<pre caption="Stripowanie jądra">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>
<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>
</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla MIPS</title>
<body>
<p>
Jeśli Twój system oparty jest na Indy/Indigo2, powinieneś włączyć dla niego wsparcie:
</p>
<pre caption="Aktywacja SGI IP22">
Machine selection ---&gt;
  [*] Support for SGI IP22 (Indy/Indigo2)
</pre>
<p>
Jeżeli chcesz uruchamiać binarki Irix, aktywuj ich obsługę:
</p>

<pre caption="Aktywacja wsparcia dla binarek IRIX">
General setup ---&gt;
  [*] Include IRIX binary compatibility
</pre>
<p>
Jeśli masz karty ISA/EISA w SGI Indigo2, włącz dla nich wsparcie.
</p>
<pre caption="Aktywacja w SGI Indigo2 wsparcia dla ISA/EISA">
General setup ---&gt;
  [*] Indigo-2 (IP22) EISA bus support
  [*]   ISA bus support
</pre>

<p>
Jeśli posiadasz port szeregowy SGI, włącz jego obsługę. Jeżeli masz port szeregowy
ISA, zamiast niego aktywuj "PC-style hardware".
</p>
<pre caption="Aktywacja obsługi portu szeregowego SGI">
Parallel port support  ---&gt;
  &lt;*&gt; Parallel port support
  &lt;*&gt;   SGI Indy/Indigo2 hardware (EXPERIMENTAL) (NEW)
  &lt;*&gt;   IEEE 1284 transfer modes (NEW)
</pre>

<p>
Jeżeli zamierzasz korzystać ze slotów ISA w Indigo2, włącz wsparcie dla technologii
"włącz i używaj" (plug and play).
</p>

<pre caption="Aktywacja obsługi PnP dla ISA">
Plug and Play configuration  ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;*&gt;   ISA Plug and Play support
</pre>

<p>
Nie zapomnij aktywować obsługi SCSI oraz sterownika SGI WD93C93:
</p>

<pre caption="Aktywacja sterownika WD93C93">
SCSI low-level drivers  ---&gt;
  &lt;*&gt; SGI WD93C93 SCSI Driver
</pre>

<p>
Prawdopodobnie zechcesz także wsparcia dla kontrolera
ethernet SGI Seeq:
</p>

<pre caption="Aktywacja obsługi SGI Seeq">
Network device support  ---&gt;
  Ethernet (10 or 100Mbit)  ---&gt;
    [*] Ethernet (10 or 100Mbit)
    [*]   SGI Seeq ethernet controller support
</pre>

<p>
Nie zapomnij o włączeniu obsługi konsoli szeregowej oraz wsparcia dla SGI
Zilog85C30:
</p>

<pre caption="Aktywacja obsługi SGI Zilog85C30">
Character devices ---&gt;
  [*] Non-standard serial port support
  [*]   SGI Zilog85C30 serial support
</pre>

<p>
Nie zapomnij także o wsparciu zarówno dla Indy/I2 jak i SGI
DS1286 RTC:
</p>

<pre caption="Aktywacja obsługi Watchdog i RTC">
Character Devices ---&gt;
  [*] SGI DS1286 RTC support
  Watchdog Cards  ---&gt;
    [*] Watchdog Timer Support
    &lt;*&gt;   Indy/I2 Hardware Watchdog
</pre>

<p>
Powinieneś także włączyć obsługę partycji SGI :)
</p>

<pre caption="Aktywacja obsługi partycji SGI">
File Systems ---&gt;
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*]   SGI partition support
</pre>

<p>
Jeśli posiadasz kartę SGI Newport (XL Gfx) i chcesz z niej korzystać, włącz
dla niej wsparcie:
</p>

<pre caption="Aktywacja obsługi SGI Newport Card">
Console drivers  ---&gt;
  &lt;*&gt; SGI Newport Console support (NEW)
</pre>

<p>
Aby włączyć obsługę dźwięku dla Indy/Indigo2 zaznacz następujące opcje:
</p>

<pre caption="Aktywacja obsługi SGI HAL2">
Sound  ---&gt;
  &lt;*&gt; Sound card support
  &lt;*&gt;   SGI HAL2 sound (EXPERIMENTAL)
</pre>
<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja opcji zalecanych dla AMD64</title>
<body>

<p>
Jeśli jesteś posiadaczem sprzętu wieloprocesorowego z Opteronami,
powinieneś włączyć "Symmetric multi-processing support":
</p>

<pre caption="Aktywacja obsługi SMP">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Po ukończeniu konfiguracji jądra, przejdź do <uri
link="#compiling">Kompilacji i Instalacji</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilacja i Instalacja</title>
<body>

<p>
Nadszedł czas na jego kompilację i instalację naszego jądra.
Opóść program konfiguracyjny i wykonaj polecenie
<c>make dep &amp;&amp; make bzImage modules modules_install</c>:
</p>

<pre caption="Kompilacja jądra">
<comment>(Dotyczy jąder 2.4 dla platformy x86)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Dotyczy jąder 2.4 dla pozostałych platform)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Dotyczy jąder 2.6 dla platformy amd64</comment>
# <i>make bzImage modules modules_install</i>

<comment>(Dotyczy jąder 2.6 dla pozostałych architektur)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Następnie skopiuj obraz kernela do <path>/boot</path>. W kolejnym 
przykładzie założyliśmy, iż zdecydowałeś się skorzystać z 
<c>vanilla-sources-2.4.22</c> (co nie zawsze jest właściwym
rozwiązaniem dla twojej architektury!):
</p>

<pre caption="Instalacja jądra">
<comment>(Dotyczy platformy x86)</comment>
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>

<comment>(Dotyczy platformy amd64)</comment>
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.4.22</i>

<comment>(Dotyczy pozostałych platform)</comment>
# <i>cp vmlinux /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>
</pre>

<p>
Na wszelki wypadek, warto skopiować do <path>/boot</path>
także plik konfiguracyjny.
</p>

<pre caption="Archiwizacja pliku konfiguracyjnego">
# <i>cp .config /boot/config-2.4.22</i>
</pre>
<p>
Jeśli jesteś użytkownikiem architektury MIPS, i Twój system nie potrafi
korzystać z jąder ELF, skompiluj kernel poleceniem <c>make vmlinux.ecoff</c>
zamiast <c>make vmlinux</c>. Obraz jądra zostanie zapisany nie jako
<path>vmlinux</path>, ale <path>arch/mips/boot/vmlinux.ecoff</path>.
</p> 
<p>
Teraz przejdź do <uri link="#doc_chap4">Instalacji Oddzielnych
Modułów</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatywnie: Używanie genkernel</title>
<body>

<p>
Skoro czytasz tą sekcję, zapewne zdecydowałeś się skorzystać ze skryptu
<c>genkernel</c> aby automatycznie skonfigurować swoje jądro. Jakkolwiek
oznacza to także, że jesteś użytkownikiem platformy x86. Inne architektury
<e>nie są przez niego wspierane</e>. <!-- TODO: Add ppc as it should be available with the first 2004 release -->
</p>

<p>
Po zainstalowaniu źródeł jądra, nadszedł czas na ich kompilację.
<c>genkernel</c> dokonuje podobnej konfiguracji z jakiej korzysta LiveCD.
Oznacza to, że jeśli go użyjesz, Twój system będzie automatycznie wykrywał
sprzęt w czasie startu. Ponieważ aby z niego korzystać, nie
trzeba przeprowadzać żadnych ręcznych ustawień, jest on idealnym rozwiązaniem
dla użytkowników z jakichś powodów nie chcących przeprowadzać samodzielnej
kompilacji.
</p>

<p>
No więc, do dzieła. Zacznijmy od instalacji naszego skryptu:
</p>

<pre caption="Instalacja genkernel">
# <i>emerge --usepkg genkernel</i>
</pre>

<p>
Teraz go uruchommy. Zwróć uwagę, iż <c>genkernel</c> aktywuje
wsparcie niemal dla całego obsługiwanego sprzętu. Wobec tego kompilacja
może trwać dosyć długo!
</p>

<pre caption="Uruchamianie genkernel">
# <i>genkernel</i>
Gentoo Linux genkernel, version 1.4
Copyright 2003 Gentoo Technologies, Inc., Bob Johnson, Daniel Robbins
Distributed under the GNU General Public License version 2

Settings:
compile optimization: 1 processor(s)
source tree: /usr/src/linux-2.4.22
config: gentoo (customized)
config loc: /etc/kernels/config-2.4.22
initrd config: (default) /etc/kernels/settings

* Running "make oldconfig"...                                                                     [ ok ]
* Logging to /var/log/genkernel.log...                                                            [ ok ]
* Starting 2.4.22 build...                                                                        [ ok ]
* Running "make dep"...                                                                           [ ok ]
* Running "make bzImage"...                                                                       [ ok ]
* Running "make modules"...                                                                       [ ok ]
* Running "make modules_install"...                                                               [ ok ]
* Moving bzImage to /boot/kernel-2.4.22...                                                        [ ok ]
* Building busybox...                                                                             [ ok ]
* Creating initrd...                                                                              [ ok ]

* Build completed successfully!

* Please specify /boot/kernel-2.4.22 and /boot/initrd-2.4.22
* when customizing your boot loader configuration files.
</pre>

<p>
Gdy proces dobiegnie końca, gotowe będą jądro, pełny zestaw modułów
oraz <e>dysk startowy</e> (initrd). Informacji o kernelu i initrd
potrzebować będziemy podczas konfiguracji menadżera uruchamiania.
Zapisz sobie ich nazwy abyś wiedział co wpisać w jego pliku konfiguracyjnym.
initrd zostanie załadowane natychmiast po uruchomieniu systemu i przeprowadzi
automatyczne wykrywanie sprzętu (tak jak na LiveCD) zanim włączy się
"prawdziwy" Gentoo Linux.
</p>

<p>
Podczas gdy initrd wykrywa tylko sprzęt niezbędny do uruchomienia systemu,
<c>hotplug</c> konfiguruje pozostałe urządzenia. Zainstalujmy go i uaktywnijmy,
żeby jeszcze bardziej upodobnić nasze Gentoo do LiveCD. Aby to zrobić,
wydaj następujące polecenia:
</p>

<pre caption="Instalacja i aktywacja hotplug">
# <i>emerge --usepkg hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section>
<title>Instalacja Dodatkowych Modułów Jądra</title>
<subsection>
<title>Instalacja Dodatkowych Modułów</title>
<body>

<p>
Standardowe jądro nie obsługuje wszystkich dostępnych urządzeń. Część
sterowników udostępniana jest wyłącznie osobno. Oto lista ebuildów
instalujących dodatkowe moduły:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Urządzenie</th>
  <th>Polecenie</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Sterownik dla XFree86 do kart graficznych NVIDIA, wspierający akcelerację</ti>
  <ti><c>emerge --usepkg nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-net</ti>
  <ti>Zintegrowana karta sieciowa na płytach NVIDIA Nforce(2)</ti>
  <ti><c>emerge nforce-net</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>Zintegrowana karta dźwiękowa na płytach NVIDIA Nforce(2)</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Kartay sieciowe Intel e100</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Karty sieciowe Intel e1000</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Wsparcie dla Creative Sound Blaster Live!/Audigy</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>Sterownik dla XFree86 do kart graficznych ATI Radeon 8500+/FireGL, wspierający akcelerację</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
  <ti>xfree-drm</ti>
  <ti>
    Sterowniki dla XFree86 do kart graficznych ATI Radeon aż do 9200, Rage128,
    Matrox, Voodoo oraz innych.
  </ti>
  <ti><c>VIDEO_CARDS="twoja karta" emerge xfree-drm</c></ti>
</tr>
</table>

<p>
Część wymienionych pakietów może posiadać spore zależności. Aby zobaczyć
pełną listę wymagań danego ebuilda, skorzystaj z <c>emerge
--pretend</c>. W przykładzie pokażemy <c>emu10k1</c>:
</p>

<pre caption="Wyświetlanie pełnej listy instalowanych pakietów">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Jeśli nie chcesz instalować jakiegoś pakietu wymaganego przez sterownik,
poleceniem <c>emerge --pretend --verbose</c> możesz wyświetlić które
flagi USE są sprawdzane podczas kalkulacji zależności:
</p>

<pre caption="Wyświetlanie używanych flag USE">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
W poprzednim przykładzie <c>emu10k1</c> zależało od <c>aumix</c>,
używającego flag <c>gtk</c> oraz <c>gnome</c>, powodujących iż
razem z nim zainstalowane zostanie GTK (zależące z kolei od XFree).
</p>

<p>
Jeżeli nie chcesz instalować tego wszystkiego, odznacz wszystkie flagi USE, na przykład:
</p>

<pre caption="Instalacja emu10k1 z wyłączonymi wszystkimi flagami USE">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Jeśli rezutat Cię zadowala i chcesz w taki sposób zainstalować <c>emu10k1</c>,
 usuń opcję <c>--pretend</c>.
</p>

</body>
</subsection>
<subsection>
<title>Konfiguracja Modułów</title>
<body>

<p>
Jeśli nie korzystasz z <c>hotplug</c> powinieneś wpisać do
<path>/etc/modules.autoload.d/kernel-2.4</path> (lub <path>kernel-2.6</path>)
listę wszystkich modułów, które mają być ładowane podczas startu.
Możesz również podać do nich dodatkowe opcje.
</p>

<p>
Aby wyświetlić listę dostępnych modułów, uruchom <c>find</c> z podanymi
parametrami. Nie zapomnij zamienić "&lt;wersja jądra&gt;" wersją
świeżo skompilowanego kernela:
</p>

<pre caption="Wyświetlanie dostępnych modułów">
# <i>find /lib/modules/&lt;wersja jądra&gt;/ -type f -iname '*.o'</i>
</pre>

<p>
Na przykład, aby automatycznie podczas startu ładować moduł <c>3c59x.o</c>:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4 lub kernel-2.6">
3c59x
</pre>

<p>
Następnie wykonaj <c>modules-update</c>, żeby zaktualizować
<path>/etc/modules.conf</path>:
</p>

<pre caption="Uruchamianie modules-update">
# <i>modules-update</i>
</pre>

<p>
Przejdź teraz do <uri link="?part=1&amp;chap=8">Konfiguracji
Systemu</uri>.
</p>

</body>
</subsection>
</section>
</sections>
