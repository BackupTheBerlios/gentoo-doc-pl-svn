<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Orig revision: 1.7 -->
<!-- Translator: Sharak <sharak@rybnet.pl> -->
<!-- Title: Flagi USE -->
<!-- Status: Ukończono -->

<!-- The content of this document is licensed under the CC-BY-SA license 
-->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /cvsroot/gentoo-doc-pl/trans/translated/handbook/hb-working-use.xml,v 1.2 2004/01/10 11:15:33 sharak Exp $ -->

<sections>
<section>
<title>Czym są flagi USE?</title>
<subsection>
<title>Idea flag USE</title>
<body>

<p>
Kiedy instalujesz Gentoo (lub dowolną inną dystrybucję, albo nawet inny 
system operacyjny) dokonujesz wyborów zależnych od środowiska, z którym 
pracujesz. Instalacja dla serwera różni się od instalacji dla stacji 
roboczej. Stacja dla gracza różni się od stacji do obróbki grafiki 3D.
</p>

<p>
Nie jest to tylko prawdą dla pakietów, które wybierasz przy instalacji, 
ale także dla cech, które dany pakiet powinien posiadać. Jeżeli nie 
potrzebujesz obsługi OpenGL, dlaczego powinieneś instalować OpenGL oraz 
jego obsługę w większości Twoich pakietów? Jeżeli nie chcesz używać KDE, 
dlaczego miałbyś budować pakiety ze wsparciem dla KDE, jeżeli te pakiety 
pracują bez problemów bez KDE?
</p>

<p>
Aby pomóc użytkownikom w decyzji co instalować/aktywować a co nie, 
postanowiliśmy stworzyć środowisko, które użytkownik mógłby dostosować w 
łatwy sposób. Zmusza to użytkownika do wybrania tego, co naprawdę 
potrzebuje. Cały proces ułatwiamy dzięki Portage, naszemu systemowi 
zarządzania pakietami, który pomaga dokonać słusznych decyzji.
</p>

</body>
</subsection>
<subsection>
<title>Definicja flag USE</title>
<body>

<p>
Każda flaga jest słowem kluczowym, które reprezentuje wspierane funkcje 
oraz informacje o zależnościach dla wybranego wątku. Jeżeli zdefiniujesz 
daną flagę USE, Portage będzie wiedział, że potrzebujesz wsparcia 
przypisanego danemu słowu kluczowemu. Oczywiście uwzględnione zostaną 
także pakiety zależne.
</p>

<p>
Przyjżyjmy się zatem przykładowi: słowo kluczowe <c>kde</c> . Jeżeli nie 
posiadasz go wśród zmiennych <c>USE</c> , wszystkie pakiety, które 
posiadają <e>opcjonalne</e> wsparcie dla KDE, zostaną skompilowane 
<e>bez</e>wsparcia dla KDE. Wszystkie pakiety, które będą 
<e>opcjonalnie</e> zależne od KDE, zostaną zainstalowane <e>bez</e> 
bibliotek KDE (jako zależności). Jeżeli zdefiniujesz słowo kluczowe 
<c>kde</c>, wtedy te pakiety zostaną skompilowane <e>ze</e> wsparciem 
dla KDE oraz biblioteki KDE zostaną zainstalowane jako pakiety zależne.
</p>

<p>
Poprzez poprawne dobranie słów kluczowych otrzymasz system dokładnie 
dostosowany do Twoich potrzeb.
</p>

</body>
</subsection>
<subsection>
<title>Jakie wyróżniamy flagi USE?</title>
<body>

<p>
Wyróżniamy dwa typy flag USE: <e>globalne</e> oraz <e>lokalne</e>.
</p>

<ul>
  <li>
    <e>Globalne</e> flagi USE są używane dla większej ilości pakietów, 
ogólno systemowe. Większość ludzi postrzega je właśnie jako flagi USE.
  </li>
  <li>
    <e>Lokalne</e> flagi USE są używane przez pojedyńczy pakiet w celu 
dokonania dezycji specyficznych dla danego pakietu.
  </li>
</ul>

<p>
Lista dostępnych globalnych flag USE jest dostępna na stronie <uri
link="/dyn/use-index.xml">online</uri> lub też lokalnie w pliku
<path>/usr/portage/profiles/use.desc</path>. Krótki (<e>bardzo</e> 
niekompletny)
fragment:
</p>

<pre caption="Krótki fragment dostępnych flag USE">
gtk     - Dodaje wsparcie dla x11-libs/gtk+ (The GIMP Toolkit)
gtk2    - Używa gtk+-2.0.0 zamiast gtk+-1.2 w przypadku, gdy program 
wspiera oba formaty.
gtkhtml - Dodaje wsparcie dla gnome-extra/gtkhtml
guile   - Dodaje wsparcie dla dev-util/guile (Intepreter dla Scheme)
icc     - Używa kompilatora Intel C++ jeżeli pakiet posiada dla niego 
wsparcie
icc-pgo - Włącza generację danych PGO lub używa przy icc.
imap    - Dodaje wpsarcie dla IMAP
</pre>

</body>
</subsection>
</section>
<section>
<title>Używanie flag USE</title>
<subsection>
<title>Deklarowanie trwałych flag USE</title>
<body>

<p>
W nadzieji, że przekonałeś się jak ważne są flagi USE, postaramy się 
teraz wytłumaczyć Ci jak je deklarować.
</p>

<p>
Jak poprzednio wspomnieliśmy, wszystkie flagi <c>USE</c> są deklarowane 
wewnątrz zmiennej USE. Aby ułatwić użytkownikom szukanie oraz wybór flag 
USE, dostarczamy dobrany przez nas <e>domyślny</e> zestaw. Zestaw ten 
jest kolekcją flag USE, które według nas są najczęściej używane przez 
użytkowników Gentoo. Domyślny zestaw jest zdeklarowany w pliku 
<path>/etc/make.profile/make.defaults</path>. Rzućmy okiem na te 
domyślne ustawienia:
</p>

<pre caption="/etc/make.profile/make.defaults USE variable">
USE="x86 oss apm arts avi berkdb crypt cups encode foomaticdb gdbm gif 
gpm gtk 
     imlib jpeg kde gnome libg++ libwww mad mikmod motif mpeg ncurses 
nls 
     oggvorbis opengl pam pdflib png python qt quicktime readline sdl 
slang 
     spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Jak możesz zauważyć, wymienione wyżej zmienne zawierają juz dość dużo 
słów kluczowych. Pamiętaj, <b>nie</b> dokonuj zmian w pliku 
<path>/etc/make.profile/make.defaults</path> aby dostosować zmienną 
<c>USE</c> do Twoich potrzeb: zmieny te zostaną cofnięte podczas 
aktualizacji Portage!
</p>

<p>
Aby zmienić domyślne ustawienia, musisz dodać lub usunąć słowa kluczowie 
do zmiennej <c>USE</c>. Dokonuje się tego globalnie definiując zmienną 
<c>USE</c> w pliku <path>/etc/make.conf</path>. W tej zmiennej możesz 
dodać flagi, które są Ci potrzebne, lub też możesz usunać flagi, których 
nie potrzebujesz. Usunięcie flagi dokonuje się poprzez wstawienie znaku 
minus ("-") przed wybraną flagą.
</p>

<p>
Na przykład, aby usunąć wsparcie dla KDE i QT ale dodać wsparcie dla 
ldap, zmienna <c>USE</c> w pliku <path>/etc/make.conf</path> powinna 
wyglądać następująco:
</p>

<pre caption="Przykładowe ustawienia zmiennej USE w pliku 
/etc/make.conf">
USE="-kde -qt ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Deklaracja tymczasowych flag USE</title>
<body>

<p>
Czasami zachodzi potrzeba użycia flagi USE tylko jeden raz. Zamiast 
edytować plik <path>/etc/make.conf</path> dwa razy (aby dokonać oraz 
przywrócić zmiany w zmiennej USE) możesz poprostu zdeklarować zmienną 
USE jako zmienną środowiska.
</p>

<p>
Jako przykład usuniemy wsparcie dla javy na czas instalacji mozilli.
</p>

<note>
Polecenie <c>emerge</c> będzie opisane bardziej szczegółowo w sekcji 
<uri
link="?part=2&amp;chap=2">Portage i oprogramowanie</uri>.
</note>

<pre caption="Używanie USE jako zmiennej środowiskowej">
# <i>USE="-java" emerge mozilla</i>
</pre>

</body>
</subsection>
<subsection>
<title>Dziedziczenie flag USE</title>
<body>

<p>
Niektóre pakiety nie tylko używają flag USE, ale także je dostarczają. 
Kiedy instalujesz taki pakiet, flagi USE, które on dostarcza są dodawane 
do juz istniejących flag. Aby przejrzeć listę pakietów, które 
dostarczają flagi USE, zajżyj do pliku 
<path>/etc/make.profile/use.defaults</path>:
</p>

<pre caption="Fragment pliku /etc/make.profile/use.defaults">
gnome           gnome-base/gnome
gtk             x11-libs/gtk+
qt              x11-libs/qt
kde             kde-base/kdebase
motif           x11-libs/openmotif
</pre>

</body>
</subsection>
<subsection>
<title>Pierwszeństwo</title>
<body>

<p>
Oczywiście istnieje pierwszeństwo w przydzielaniu priorytetów konkretnym 
flagom USE. Nie ma sensu deklarować zmiennej <c>USE="-java"</c> tylko po 
to, aby zobaczyć, że <c>java</c> jest i tak zdeklarowana. Pierwszeństwo 
dla flag USE jest ustalone przez odpowiedni priorytet (pierwszy ma 
najniższy priorytet):
</p>

<ol>
  <li>
    Domyślne ustawienia zmiennej USE znajdujące się w pliku 
<path>/etc/make.profile/make.defaults</path>
  </li>
  <li>
    Dziedziczne ustawienia USE, jeżeli zainstalowany został pakiet 
znajdujący się w pliku <path>/etc/make.profile/use.defaults</path>
  </li>
  <li>
    Zdefiniowana przez użytkownika zmienna USE znajdująca się w pliku 
<path>/etc/make.conf</path>
  </li>
  <li>
    Zmienna USE zdefiniowana przez użytkownika jako zmienna 
środowiskowa.
  </li>
</ol>

<p>
Aby sprawdzić finalne ustawienia zmiennej <c>USE</c> widziane przez 
Portage, wkonaj polecenie <c>emerge info</c>.
Polecenie to ukaże wszystkie istotne zmienne (włączając zmienną 
<c>USE</c>) z wartościami użytymi przez Portage.
</p>

<pre caption="Wykonywanie polecenia emerge info">
# <i>emerge info</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Zmienne USE specyficzne dla pakietów</title>
<subsection>
<title>Przeglądanie dostępnych flag USE</title>
<body>

<p>
W następnym rozdziale <uri link="?part=2&amp;chap=2">Portage i 
oprogramowanie</uri>
wytłumaczymy jak zarządzać zainstalowanym oprogramowaniem oraz jak 
pracować z <c>emerge</c>. Najpierw jednakże chcielibyśmy przybliżyć Ci 
<c>emerge</c> pokazując jak sprawdzić, których zmiennych USE używa 
pakiet.
</p>

<p>
Weźmy na przykład <c>mozillę</c>: Których flag USE ona używa? Aby się 
tego dowiedzieć, użyjemy polecenia <c>emerge</c> z parametrami 
<c>--pretend</c> (tak naprawdę to nic on nie daje) oraz <c>--verbose</c> 
(pokazuje więcej informacji):
</p>

<pre caption="Przeglądanie używanych flag USE:">
# <i>emerge --pretend --verbose mozilla</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild  N    ] net-www/mozilla-1.5-r1 +java +crypt -ipv6 -gtk2 +ssl 
+ldap 
+gnome -debug +mozcalendar -mozaccess -mozxmlterm -moznoirc -moznomail
-moznocompose -moznoxft 
</pre>

<p>
<c>emerge</c> nie jest jedynym narzędziem, które potrafi to robić. Tak 
naprawdę mamy narzędzie przeznaczone do przeglądania informacji o 
pakietach zwane <c>etcat</c>. Znajduje się ono w pakiecie 
<c>gentoolkit</c>. Najpierw zainstaluj <c>gentoolkit</c>:
</p>

<pre caption="Instalacja gentoolkit">
# <i>emerge --usepkg gentoolkit</i>
</pre>

<p>
Teraz uruchom <c>etcat</c> z argumentem <c>uses</c> aby przejżeć flagi 
USE dla konkretnego pakietu. Dla przykładu sprawdźmy pakiet 
<c>gnumeric</c> package:
</p>

<pre caption="Użycie etcat do przeglądania użytych flag USE:">
# <i>etcat uses gnumeric</i>
[ Colour Code : <i>set</i> <comment>unset</comment> ]
[ Legend      : (U) Col 1 - Current USE flags        ]
[             : (I) Col 2 - Installed With USE flags ]

 U I [ Found these USE variables in : app-office/gnumeric-1.2.0 ]
 - - <comment>libgda</comment>  : Adds GNU Data Access (CORBA wrapper) 
support for gnumeric
 - - <comment>gnomedb</comment> : unknown
 + + <i>python</i>  : Adds support/bindings for the Python language
 + + <i>bonobo</i>  : Adds support for gnome-base/bonobo (Gnome CORBA 
interfaces)
</pre>

</body>
</subsection>
</section>
</sections>
