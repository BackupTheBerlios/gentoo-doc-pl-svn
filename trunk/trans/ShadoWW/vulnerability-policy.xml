<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- Orig revision: ?.? -->
<!-- Translator: Damian Kuras <damian@lezajsk.info> -->
<!-- Title: XML w Gentoo -->
<!-- Status: Do korekty -->
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- $Id: $ -->
<!-- $Header$ -->

<guide link="/security/en/vulnerability-policy.xml">
<title>Gentoo Linux Vulnerability Treatment Policy</title>
<author title="Author">
  <mail link="koon@gentoo.org">Thierry Carrez</mail>
</author>
<author title="Tłumacz">Damian Kuras</author>

<abstract>
Ten dokument opisuje zasady postępowania z błędami zawartymi w pakietach 
wchodzących w skład Gentoo Linux, które zostały udostępnione jego użytkownikom.
</abstract>

<license/>

<version>1.2.2</version>
<date>March 7, 2005</date>

<chapter>
<title>Zakres</title>
<section>
<title>Wspierane architektury</title>
<body>

<p>
Gentoo Linux oferowany jest dla wielu architektur. Cześć z tych architektur
posiada większą ilość deweloperów niż inne i z tego powodu zdolni są szybciej
odpowiadać na nowe błędy w zabezpieczeniach. Podczas gdy podstawowym celem 
projektu Gentoo Security jest zapewnienie łatek bezpieczeństwa w tym samym 
czasie dla każdej architektury. Warto przy tym uwzględnić także fakt, że 
GLSA muszą być wypuszczane możliwie szybko, aby nasi użytkownicy zostali 
poinformowani o błędzie i mogli zabezpieczyć swoje komputery.
</p>

<p>
Z tego powodu zespół bezpieczeństwa dzieli architektury Gentoo na dwie grupy:
<b>wspierane</b> i <b>niewspierane</b>.
</p>

<ul>
 <li>
 <b>Wspierane:</b> błędy rozpoznane w tych architekturach muszą posiadać
 rozwiązanie zanim GLSA zostanie wydane.
 </li>
 <li>
 <b>Niewspierane:</b> użytkownicy tych architektur będą powiadamiani o nowych
 błędach, jednak, nie będziemy czekać na rozwiązanie tych błędów na tych
 architekturach przed wypuszczeniem GLSA i zamknięciem błędu.
 </li>
</ul>

<p>
Poniżej znajduje się lista aktualnie wspieranch architektur:
</p>

<table>
<tr>
  <th>Wspierane architektury</th>
</tr>
<tr>
  <ti>x86</ti>
</tr>
<tr>
  <ti>ppc</ti>
</tr>
<tr>
  <ti>sparc</ti>
</tr>
<tr>
  <ti>amd64</ti>
</tr>
<tr>
  <ti>alpha</ti>
</tr>
</table>
  
<p>
Każda architektura może zostać włączona do wspieranych architektur. Istnieją
dwie proste reguły, które muszą zostać poznane, aby zostać oficjalnie wspieranym
przez projekt Gentoo Security:
</p>

<ul>
 <li>
 Mianować dewelopera, który jest pierwszą osobą kontaktującą się w sprawach
 błędów bezpieczeństwa odnośnie danej architektury. Sprawdzimy czy dana osoba
 jest odpowiedzialna za zagwarantowanie, że błedy bezpieczeństwa sw adequately
 remeditaed na ich określonej architekturze.
 </li>
 <li>
 Agree to adhere to the published timelines for testing and
 marking packages as stable
 </li>
</ul>

</body>
</section>
<section>
<title>Niestabilne pakiety</title>
<body>

<p>
Zdarza się, że błąd zostanie znaleziony w pakiecie, który nie jest częścią
stabilnego drzewa. Jest to przypadek kiedy błąd jest security regression w
nowszym (~ARCH) ebuildzie, ale starszy (stabilny) pakiet nie posiada tego błedu,
lub wtedy gdy w drzewie nigdy nie było stabilnego ebuilda danego pakietu. W
takim przypadku błąd cały czas musi być zgłoszony, po czym zostanie naprawiony,
ale <e>nie zostanie wydany GLSA</e> kiedy wszystko zostanie rozwiązane.
</p>

<note>
Poliyka ta może zostać zmieniona w chwili kiedy nasze narzędzia zapewnią
bardziej kompleksową aktaulizację ścieżek oraz gdy dołączy wystarczająca ilość
koordynatorów GLSA do zespołu bezpieczeństwa.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Vulnerability feed</title>
<section>
<title>Opublikowane błędy</title>
<body>

<p>
Każdy błąd w bezpieczeństwie na początku powinnien zostać wprowadzony 
wpis do <uri link="http://bugs.gentoo.org">Bugzilli</uri> jako produkt "Gentoo
Security" i komponent "Vulnerabilities" (przypisane do
<mail link="security@gentoo.org">security@gentoo.org</mail>). Główne listy
bezpieczeństwa powinny posiadać oficjalnie wybranych ludzi przydzielonych do
nich, którzy powinni dbać o wpisy do bugzilli dla wsztstkich błędów w
bezpieczeństwie umieszczonych na tych listach.
</p>

</body>
</section>
<section>
<title>Poufne błędy</title>
<body>

<p>
Poufne błędy (czyli na przykład takie, które pochdzą z bezpośredniej wymiany
informacji między deweloperami lub zatrzeżonych list vendor-sec) powinno
zasosować się specyficzną procedurę. Nie powinny one się pojawić jako publiczne
wpisy w bugzilli, ale jedynie zastrzeżonych mediach takich jak prywatne sekcje
bugzilli lub narzędzie GLSAMaker. Powinny zostać one naprawione używając
prywatnych kanałów komunikacyjnych pomiędzy koordynatorem GLSA, a osobą
zajmującą się pakietem.
</p>

<note>
Wymiana informacji dotycząca poufnych błędów powinna być odpowiednio kodowana.
Należy wysyłać je do określonych członków zespołu bezpieczeństwa oraz kodować
przy użyciu klucz GPG. Liste członków zespołu bezpieczeństwa znaleść można na
stronie <uri link="http://security.gentoo.org">security.gentoo.org</uri>, ich
ID można odleźć na stronie 
<uri link="http://www.gentoo.org/proj/en/devrel/roll-call/userinfo.xml">Gentoo
Linux Developers List</uri>, a ich klucze można na serwerze kluczy
<uri link="http://pgp.mit.edu">pgp.mit.edu</uri>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Dispatch</title>
<section>
<title>Poziom bezwzględności?</title>
<body>

<p>
Aby seed odpowiedni czas reakcji i procedury eskalacji, dla każdego błędu należy
przydzielić odpowiedni severity level. Severity level musi bazowac na tym jak
powszechne jest narażone oprogramowanie wśród użytkowników Gentoo i jak poważne
są błędy.
</p>

<p>
Możemy użyć poniższych dwóch tabel do pomocy przy przydzielaniu severity level:
</p>

<table>
<tr>
  <th>Jak powszechny jest dany pakiet</th>
  <th>Zagrożona konfiguracja</th>
  <th> </th>
</tr>
<tr>
  <ti>
  Pakiet systemu
  </ti>
  <ti>
  Domyślny lub określony</ti>
  <ti>A</ti>
</tr>
<tr>
  <ti>Powszechny pakiet (występuje prawdopodobnie na co najmniej 1/20 
  instalacji Gentoo).</ti>
  <ti>Domyślny</ti>
  <ti>A</ti>
</tr>
<tr>
  <ti></ti>
  <ti>Określony</ti>
  <ti>B</ti>
</tr>
<tr>
  <ti>Oprogramowanie marginalne (występuje przypuszczalnie na mniej niż
  1/20 instalacji Gentoo).</ti>
  <ti>Domyślny</ti>
  <ti>B</ti>
</tr>
<tr>
  <ti> </ti>
  <ti>Określony</ti>
  <ti>C</ti>
</tr>
<tr>
  <ti>Pakiet, który nigdy nie posiadał narażonej stabilnej wersji</ti>
  <ti>Domyślny lub określony</ti>
  <ti>~</ti>
</tr>
</table>

<table>
<tr>
  <th>Przewidywany rodzaj błędu</th>
  <th> </th>
  <th>Odpowiednia "surowość" (severity) GLSA</th>
</tr>
<tr>
  <ti>Complete remote system compromise: zdalne uruchamianie dowolnego kodu z
  uprawnieniami superużytkownika</ti>
  <ti>0</ti>
  <ti>wysoki</ti>
</tr>
<tr>
  <ti>Remote active compromise: bezpośrednie zdalne uruchomienie dowolnego kodu
  z mniejszymi prawami lub prawami uzytkownika na serwerze</ti>
  <ti>1</ti>
  <ti>wysoki</ti>
</tr>
<tr>
  <ti>Eskalacja lokalny zezwoleńn: flaw allowing root compromise when you
  have local access</ti>
  <ti>1</ti>
  <ti>wysoki</ti>
</tr>
<tr>
  <ti>Remote passive compromise: zdalne uruchamianie dowolnego kodu poprzez
  kuszenie użytkownika do odwiedzenia złośliwego serwera lub używanie złośliwych
  danych</ti>
  <ti>2</ti>
  <ti>normalny</ti>
</tr>
<tr>
  <ti>Global service compromise: denial of service, hasła lub wycieki baz
  danych...</ti>
  <ti>3</ti>
  <ti>normlany</ti>
</tr>
<tr>
  <ti>Pozostałe: cross-site-scripting, wyciek informacji...</ti>
  <ti>4</ti>
  <ti>niski</ti>
</tr>
</table>

<p>
Here is table of the resulting severity levels. They should be set
to the bugzilla severity level of the same name:
</p>

<table>
<tr>
  <th>Poziom surowości</th>
  <th>Odpowiednia ocena</th>
  <th>Opóźnienie</th>
  <th>GLSA</th>
</tr>
<tr>
  <ti>Blocker (Bloker)</ti>
  <ti>A0, B0</ti>
  <ti>1 dzień</ti>
  <ti>tak</ti>
</tr>
<tr>
  <ti>Critical (Lrytyczny)</ti>
  <ti>A1, C0</ti>
  <ti>3 dni</ti>
  <ti>tak</ti>
</tr>
<tr>
  <ti>Major (Poważny)</ti>
  <ti>A2, B1, C1</ti>
  <ti>5 dni</ti>
  <ti>tak</ti>
</tr>
<tr>
  <ti>Normal (Normlany)</ti>
  <ti>A3, B2, C2</ti>
  <ti>10 dni</ti>
  <ti>tak</ti>
</tr>
<tr>
  <ti>Minor (Nieznaczny)</ti>
  <ti>A4, B3, B4, C3</ti>
  <ti>20 dni</ti>
  <ti>?</ti>
</tr>
<tr>
  <ti>Trivial (Trywialny)</ti>
  <ti>C4, ~0, ~1, ~2, ~3, ~4</ti>
  <ti>40 dni</ti>
  <ti>no</ti>
</tr>
</table>

<note>
Opóźniene przedstawione w tej tabeli jest przedstawiają maksymalny czas pomiędzy
wydaniem łatki przez dewelopara pakietu a wydaniem stabilnego ebuilda i
odpowiadającemu mu GLSA.
</note>

</body>
</section>
<section>
<title>Security Bug Wrangler role</title>
<body>

<p>
Someone should assume the responsibility of security bug
wrangler and do the following tasks as soon as a new vulnerability
enters <uri link="http://bugs.gentoo.org">Bugzilla</uri>:
</p>

<ul>
  <li>
    wyszkuwianie duplikatów: jeśli jakiś wpis opisuje błąd, który został już
    zgłoszony powinnien zostać on rozwiązany jako DUPLICATE (duplikat)
  </li>
  <li>
    sprawdzanie poprawności komponentu (component): jeżeli błąd nie jest
    słabym punktem komponent powinnien zostać odpowiednio zmieniony
  </li>
  <li>
    sprawdzanie czy błąd jest rzeczywiście słabym punktem i czy narażony jest
    pakiet z dystrybucji Gentoo Linux, w przeciwnym wypadku należy rozwiązać
    błąd jako INVALID
  </li>
</ul>

<p>
W czasie tego procesu może być konieczne zapytać o szczegóły zgłaszającego błąd.
Błąd posiada status NEW (nowy) tak długo jak to będzie konieczne. Kiedy błąd
przejdzie testy poprawności (sanity tests) powinnien zostać zaakceptowany, a
osoby zajmujące się utrzymaniem porządku na bugzilli (bug wranglers) powinno
postępować w sposób opisany poniżej:
</p>

<ul>
<li>zmiena nazwy błędu tak, aby zawierał wpis kategoria/nazwa-pakietu (na
przykład: "net-mail/clamav: DoS using RAR files")</li>
<li>ocena i przydzielenie poziomu ważności (patrz wyżej)</li>
<li>ustawić status jako ASSIGNED</li>
<li>seed the status whiteboard to the correct severity code and status</li>
<li>opcjonalnie można przydzielić koordynatora GLSA dla danego błędu poprzez
dodanie nazwiska koordynatora do pola statusu (whiteboard)</li>
</ul>

<warn>
Nie należy zmieniać ważności błędu jeśli został on już przyznany. Jeżeli chcemy
zwrócić uwagę deweloperów, należy użyć pola Priority.
</warn>

</body>
</section>
<section>
<title>Rama czasowa i procedury kopii zapasowa</title>
<body>

<p>
This dispatch has to be done quickly after bug creation in order to seed
short delays for major vulnerabilities and to show appreciation to the bug
reporter. The target delay is 12 hours. The security bug wrangler has to
maintain a list of possible GLSA coordinators with disponibilities and
preferred areas of expertise. In order to ensure permanent dispatch, the
security bug wrangler job should have appropriate back-ups.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Korekcja błędów oraz szkic GLSA</title>
<section>
<title>Rola koordynatora GLSA</title>
<body>

<p>
The GLSA coordinator has responsibility for the following tasks:
</p>

<ul>
<li>wyznaczyć co należy zrobić, aby zamknąć błąd (przykładowo zidentyfikować
poszukiwaną wersję zawierając poprawkę)</li>
<li>if no fix is available from upstream yet, należy upewnić się, że błąd jest
poprawnie zgłoszony do autora programu, pole statusu ustawić na 
<c>upstream</c></li>
<li>jeśli łatka jest już dostępna należy zaangażować opiekuna pakietu do
stworzenia i zaakceptowania ebuilda zawierającego daną łatkę (opiekun pakietu
powinnien zostać dodany do list CC błędu) oraz ustawienia pola statusu na 
<c>ebuild</c></li>
<li>kiedy ebuild zostanie już zaakceptowany należy ocenić jakie słowa kluczowe
(keywords) potrzebne są dla załatanego ebuilda, zespoły poszczególnych
architektur powinny je przetestować i oznaczyć je jako stabilne na danej
architekturze (zespoły architektur [arch-teams] powinny znajdować się na liście
CC błędu), a na koniec należy oznaczyć pole statusu jako <c>stable</c></li>
<li>opiekuni architektur (arch-maintainers) powinni oznaczyć ebuild jako
stabilny jeśli poprawiony ebuild nie posiada już błędów z poprzedniej wersji</li>
<li>równolegle, należy napisać szkic GLSA używając GLSAMaker tool</li>
<li>kiedy poprawny ebuild jest gotowy dla wszystkich wspieranych architektur
należy ustawić pole statusu na <c>glsa</c></li>
</ul>

<note>
Jeżeli widoczny jest postęp w naprawie błędy a przydzielony koordynator GLSA nie
reaguje, pozostali członkowie zespołu bezpieczeństwa mogą pomagać poprzez
uaktualnianie statusu.
</note>

</body>
</section>
<section>
<title>Timeframe and escalation procedures</title>
<body>

<p>
Jeżeli chcemy poznać docelowe opóźnienie w roziązaniu błędu, została
zdefiniowana liczba procedur eskalacji. Zawierają one:
</p>

<ul>
<li>kiedy błąd jest w fazie początkowej należy zwrócić na poświęcić mu 	
szczególną uwagę oraz należy zmienić pole statusu na odpowiednik ze znakiem 
"+": <c>upstream+</c>, <c>ebuild+</c>, <c>stable+</c> and <c>glsa+</c></li>
<li>jeżeli nie jest dostępna łatka (<c>upstream+</c> status), musi zostać
podjęta decyzja o zamaskowaniu pakietu: zespół bezpieczeństwa może zamaskować
pakiet, który nie jest zależny sam od siebie, jednak należy posiadać zezwolenie
administratora TLP, aby zamaskować pakiet, który nie jest samodzielny</li>
<li>jeżeli opiekun nie stworzy ebuilda w 48 godzin po zgłoszeniu (status
<c>ebuild+</e>), zespół bezpieczeństwa sam powinnien próbować stworzyć
odpowiedniego ebuilda</li>
<li>if testing and marking stable takes too much time (<c>stable+</c> status),
    the security team will shout on IRC channels and gentoo-dev list to get
    more testers. It will either mark the ebuild stable by itself or, in the
    event this cannot be done due to stability issues, mask it (see security
    masking approval policy above)</li>
<li>if the GLSA coordinator does not show up to draft a GLSA (<c>glsa+</c>
    status), then another member of the security team should draft the GLSA
    and submit it to peer review</li>
</ul>

</body>
</section>
<section>
<title>Good practices for security bugs</title>
<body>

<p>
Security bugs differ from other bugs, in that an easy and simple upgrade path
must be presented to users through the GLSA. Therefore package maintainers and
GLSA coordinators should follow these good practices:
</p>

<ul>
<li>The ebuild including the security fix should have its own version number,
    so that it gets picked up in the normal system upgrade process: use
    rev-bumps if needed</li>
<li>The ebuild including the security fix should have a higher version number
    than any previously published version, so that an easy upgrade path can
    be proposed to the user</li>
<li>In case of a patch, it should only be applied to the more recent version,
    there is no need to rev-bump all ebuilds with a patched version</li>
<li>Vulnerable versions should be left in the tree until the bug enters the
    <c>stable</c> status, in order to correctly evaluate what keywords
    are needed for the fix version</li>
</ul>

</body>
</section>
<section>
<title>Temporary GLSAs</title>
<body>

<p>
If a <e>blocker</e> or <e>critical</e> or <e>major</e> vulnerability cannot
totally be corrected in the target delay
(for example a kernel vulnerability that has to be corrected on all sources),
an early warning GLSA should be written with workaround information
(for example: install these vanilla-sources, or here is the kernel patch to
apply to your sources). This GLSA will be replaced by the final GLSA when the
definitive correction is available.
</p>

<p>
If a common (type A or B) package is masked for security reasons, a temporary
GLSA should be issued to explain why the package is currently unavailable
and/or why people should uninstall the current version. This GLSA will be
replaced by the final GLSA when the fix becomes available and the package is
unmasked.
</p>

</body>
</section>
</chapter>

<chapter>
<title>GLSA publication process</title>
<section>
<title>Peer review</title>
<body>

<p>
Once ready, a GLSA should be submitted to peer review. At least two members
of the security team must approve the draft GLSA. Once the draft passes the
peer review process, it should be assigned an official GLSA number.
</p>

</body>
</section>
<section>
<title>GLSA release</title>
<body>

<p>
Once the GLSA passes the peer review process (and after making sure the ebuild
has made its way into the stable tree), the GLSA coordinator should
commit the GLSA XML in the Gentoo CVS repository.
Once this is done, the GLSA will automatically appear on the
<uri link="http://glsa.gentoo.org">official GLSA index page</uri> and
<uri link="http://www.gentoo.org/rdf/en/glsa-index.rdf">RDF feed</uri>.
</p>

</body>
</section>
<section>
<title>GLSA publication</title>
<body>

<p>
The GLSA text version must be published by the GLSA coordinator to the
following media:
</p>

<table>
<tr>
  <ti>Gentoo Linux official announcement mailing-list</ti>
  <ti>
  <mail link="gentoo-announce@gentoo.org">gentoo-announce@gentoo.org</mail>
  </ti>
</tr>
<tr>
  <ti>Bugtraq security mailing-list</ti>
  <ti>
  <mail link="bugtraq@securityfocus.com">bugtraq@securityfocus.com</mail>
  </ti>
</tr>
<tr>
  <ti>Full-disclosure security mailing-list</ti>
  <ti>
  <mail link="full-disclosure@lists.grok.org.uk">
  full-disclosure@lists.grok.org.uk
  </mail>
  </ti>
</tr>
<tr>
  <ti>Linuxsecurity.com advisories service</ti>
  <ti>
  <mail link="alerts@linuxsecurity.com">
  alerts@linuxsecurity.com
  </mail>
  </ti>
</tr>
<tr>
  <ti>Gentoo Linux announcement forum</ti>
  <ti><uri>http://forums.gentoo.org/viewforum.php?f=16</uri></ti>
</tr>
</table>

<p>
There should be one single email sent, with the following rules:
</p>

<ul>
<li>The <c>To:</c> field must be set to gentoo-announce</li>
<li>The <c>Cc:</c> filed must contain the other email addresses</li>
<li>The <c>From:</c> and <c>Return-Path:</c> must be set to the GLSA
    coordinator @gentoo.org address</li>
<li>The <c>Subject:</c> field must be "[ GLSA XXXXYY-ZZ ] Your vulnerability
    here"</li>
<li>The body should only contain the text version of the GLSA</li>
<li>The email must be signed by the GLSA coordinator GPG key</li>
</ul>

<note>
Developer key IDs can be found on the Gentoo Linux
<uri link="http://www.gentoo.org/proj/en/devrel/roll-call/userinfo.xml">
Developer list</uri>. All the security team GPG keys are published on public
key servers, including (but not limited to)
<uri link="http://pgp.mit.edu/">pgp.mit.edu</uri>.
</note>

<note>
To minimize errors in the publication process, the forum publication step is 
handled by an automatic poster when it receives the announcement.
</note>

<p>
When the GLSA has been published the corresponding bugzilla bug should be
resolved as FIXED, with the GLSA number referenced in the comments section
of the bug.
</p>

</body>
</section>
<section>
<title>GLSA errata</title>
<body>

<p>
Sometimes an error will slip through the peer-review process and an incorrect
GLSA will be published to the world. Depending on the severity of the error(s),
the following policy for erratum should be applied:
</p>

<table>
<tr>
  <th>GLSA error type</th>
  <th>Erratum action</th>
</tr>
<tr>
  <ti>Typos: presentation, grammar or syntax errors</ti>
  <ti>Do nothing</ti>
</tr>
<tr>
  <ti>Error in title: title is about another package or does not
  describe the vulnerability correctly</ti>
  <ti>An erratum GLSA should be published, replacing the erroneous one</ti>
</tr>
<tr>
  <ti>Error in description: the problem is not described correctly</ti>
  <ti>The GLSA XML should be corrected, no publication</ti>
</tr>
<tr>
  <ti>Omission: GLSA is correct but incomplete, you also need to update
  another package to get protection from that vulnerability</ti>
  <ti>A separate GLSA should be issued on the other vulnerable package</ti>
</tr>
<tr>
  <ti>Error in affected/unaffected versions number, but people using stable
  packages and applying GLSA instructions are protected anyway</ti>
  <ti>The GLSA XML should be corrected, no publication</ti>
</tr>
<tr>
  <ti>Error in affected/unaffected versions number, people applying GLSA
  instructions are not at all protected</ti>
  <ti>An erratum GLSA should be published, replacing the erroneous one</ti>
</tr>
</table>

</body>
</section>
</chapter>
</guide>
