--- hb-install-ppc64-kernel.xml	2006-01-09 14:01:12.000000000 +0100
+++ hb-install-ppc64-kernel-1.xml	2006-01-09 15:02:27.000000000 +0100
@@ -7,8 +7,8 @@
 
 <sections>
 
-<version>2.9</version>
-<date>2005-11-24</date>
+<version>2.10</version>
+<date>2006-01-06</date>
 
 <section>
 <title>Strefa czasowa</title>
@@ -46,17 +46,21 @@
 <p>
 Dla architektury PPC64 należy użyć <c>gentoo-sources</c>. Zaczniemy od
 ich instalacji przy pomocy polecenia <c>emerge</c>. Flaga <c>USE="-doc"</c>
-zapobiegnie instalacji zbędnych na tym etapie zależności, takich jak np.
-xorg-x11.
+uniemożliwi zainstalowanie xorg-x11 i innych zbędnych na tym etapie 
+zależności. Flaga <c>USE="symlink"</c> nie jest konieczna w przypadku nowej
+instalacji, jednak zapewnia w późniejszym okresie tworzenie prawidłowych
+dowiązań symbolicznych <path>/usr/src/linux</path>.
 </p>
 
 <pre caption="Instalowanie źródeł kernela">
-# <i>USE="-doc" emerge gentoo-sources</i>
+# <i>USE="-doc symlink" emerge gentoo-sources</i>
 </pre>
 
 <p>
-W katalogu <path>/usr/src</path> powinieneś mieć mniej więcej taki symlink, o
-nazwie <path>linux</path>, wskazujący na źródła Twojego aktualnego kernela:
+W katalogu <path>/usr/src</path> powinniśmy mieć mniej więcej taki symlink, o
+nazwie <path>linux</path>, wskazujący na źródła Twojego aktualnego kernela. W
+tym wypadku wskazuje na źródła <c>gentoo-sources-2.6.12-r10</c>. W komputerze
+użytkownika może być to inna wersja, dlatego należy mieć to na uwadze.
 </p>
 
 <pre caption="Podgląd symlinka do źródeł kernela">
@@ -65,18 +69,6 @@
 </pre>
 
 <p>
-Jeśli informacje z symlinka nie pokrywają się z rzeczywistością (np. wskazuje na
-inne niż źródła kernela) to trzeba będzie go poprawić zanim przejdziemy do
-dalszych części tego dokumentu.  
-</p>
-
-<pre caption="Changing the kernel source symlink">
-# <i>rm /usr/src/linux</i>
-# <i>cd /usr/src</i>
-# <i>ln -s linux-2.6.12-gentoo-r10 linux</i>
-</pre>
-
-<p>
 Pora na skonfigurowanie i skompilowanie źródeł jądra. Trzeba zrobić to ręcznie,
 ponieważ genkernel na PPC64 nie jest na razie sprawny.
 </p>
@@ -158,17 +150,13 @@
 będzie w stanie zamontować partycji, a czasem nawet się nie uruchomi. Pamiętajmy
 również, aby włączać te sterowniki na stałe do jądra, w żadnym wypadku nie
 kompilujemy ich jako moduły. Przy okazji zaznaczamy również <c>Virtual
-memory</c>, <c>/proc file system</c>.  <c>/dev file system</c> +
-<c>Automatically mount at boot</c> i <c>/dev/pts file system for Unix98
-PTYs</c>:
+memory</c>, i <c>/dev/pts file system for Unix98 PTYs</c>:
 </p>
 
 <pre caption="Wybór potrzebnych systemów plików">
 File systems ---&gt;
   [*] Virtual memory file system support (former shm fs)
   [*] /proc file system support
-  [*] /dev file system support (EXPERIMENTAL)
-  [*]   Automatically mount at boot
   [*] /dev/pts file system for Unix98 PTYs
 
 <comment>(Wybieramy jedną lub kilka z tych opcji zależnie od używanych systemów
@@ -239,7 +227,9 @@
 
 <p>
 Kiedy jądro skończy się kompilować kopiujemy jego obraz do katalogu
-<path>/boot</path>.
+<path>/boot</path>. Należy pamiętać o zastąpieniu części wpisu
+<path>&lt;kernel-version&gt;</path> swoją nazwą i wersją kernela.
+
 </p>
 
 <pre caption="Instalowanie kernela">
@@ -247,15 +237,6 @@
 </pre>
 
 <p>
-Zwykle mądrą decyzją jest skopiowanie tam również pliku konfiguracyjnego, który
-posłużył do zbudowania jądra.
-</p>
-
-<pre caption="Tworzenie kopii zapasowej konfiguracji jądra">
-# <i>cp .config /boot/config-2.6.12-gentoo-r10</i>
-</pre>
-
-<p>
 Następnie przechodzimy do paragrafu <uri link="#kernel_modules">Konfigurowanie modułów jądra</uri>.
 </p>
 
@@ -269,7 +250,8 @@
 <p>
 Lista modułów, które chcemy aby były automatycznie ładowane przy starcie systemu
 powinna znajdować się w pliku <path>/etc/modules.autoload.d/kernel-2.4</path>
-(lub <path>kernel-2.6</path>). Jeśli trzeba, można dodać kilka opcji dla modułów.
+(lub <path>kernel-2.6</path>). Jeśli trzeba, można dodać kilka opcji dla 
+modułów.
 </p>
 
 <p>
