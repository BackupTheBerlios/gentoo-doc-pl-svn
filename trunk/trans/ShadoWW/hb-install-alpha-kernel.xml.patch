11,12c11,12
< <version>5.4</version>
< <date>2005-11-21</date>
---
> <version>5.5</version>
> <date>2006-01-06</date>
55,56c55,58
< <c>emerge</c>. Zmienna <c>USE="-doc"</c> zapobiegnie instalacji zbędnych na tym
< etapie zależności, takich jak np. xorg-x11.
---
> <c>emerge</c>. Flaga USE="-doc" -uniemożliwi zainstalowanie xorg-x11 i innych
> zbędnych na tym etapie zależności. Flaga <c>USE="symlink"</c> nie jest
> konieczna w przypadku nowej instalacji, jednak zapewnia w późniejszym okresie
> tworzenie prawidłowych dowiązań symbolicznych <path>/usr/src/linux</path>.
65c67
< # <i>USE="-doc" emerge vanilla-sources</i>
---
> # <i>USE="-doc symlink" emerge vanilla-sources</i>
70,71c72,74
< nazwie
< <path>linux</path>, wskazujący na źródła Twojego aktualnego kernela:
---
> W tym wypadku wskazuje na źródła <c>vanilla-sources-2.6.11.2</c>. W komputerze
> +użytkownika może być to inna wersja, dlatego należy mieć to na uwadze. nazwie
> <path>linux</path>, wskazujący na źródła Twojego aktualnego kernela. 
80,91d82
< Jeśli informacje z symlinka nie pokrywają się z rzeczywistością (np. wskazuje na
< inne niż Twoje źródła kernela) to będziesz musiał go poprawić zanim przejdziesz
< do dalszych części tego dokumentu.
< </p>
< 
< <pre caption="Zmiana dowiązania symbolicznego do źródeł jądra">
< # <i>rm /usr/src/linux</i>
< # <i>cd /usr/src</i>
< # <i>ln -s linux-2.6.11.2 linux</i>
< </pre>
< 
< <p>
94,96c85,87
< to używane przez płytę instalacyjną. Możesz też przeprowadzić cały proces ręcznie i lepiej
< dostostosować kernel do swoich potrzeb. Zaczniemy od omówienia tej drugiej,
< znacznie lepszej metody.
---
> to używane przez płytę instalacyjną. Możesz też przeprowadzić cały proces
> ręcznie i lepiej dostosować kernel do swoich potrzeb. Zaczniemy od omówienia
> tej drugiej, znacznie lepszej metody.
118c109
< kilku kerneli zapomnicie, że kiedykowiek uważaliście to za trudne zadanie.
---
> kilku kerneli zapomnicie, że kiedykolwiek uważaliście to za trudne zadanie.
130,131c121,122
< źródłami i wpisujemy polecenie <c>make menuconfig</c>. Uruchomi się menu konfiguracyjne
< oparte na ncurses.
---
> źródłami i wpisujemy polecenie <c>make menuconfig</c>. Uruchomi się menu
> konfiguracyjne oparte na ncurses.
153,154c144,145
< fragmentów kodu jądra. Jeśli tego nie zrobisz to nawet nie zobaczysz kilku bardzo
< ważnych opcji.
---
> fragmentów kodu jądra. Jeśli tego nie zrobisz to nawet nie zobaczysz kilku
> bardzo ważnych opcji.
187d177
<     [ ] /dev file system support (OBSOLETE)
317,319c307,309
< <path>/boot</path>. W przykładzie zakładamy, że właśnie zostały skompilowane
< źródła <c>vanilla-sources-2.6.11.2</c>; w nowszych kernelach obraz nazywa się
< <path>vmlinux</path> zamiast <path>vmlinux.gz</path>.
---
> <path>/boot</path>. W nowszych kernelach obraz nazywa się 
> <path>vmlinux</path> zamiast <path>vmlinux.gz</path>. Należy o tym
> pamiętać w czasie gdy będziemy kopiować kernel.
327,335d316
< Zwykle mądrą decyzją jest skopiowanie tam również pliku konfiguracyjnego, który
< posłużył do zbudowania jądra.
< </p>
< 
< <pre caption="Tworzenie kopii zapasowej konfiguracji jądra">
< # <i>cp .config /boot/config-2.6.11.2</i>
< </pre>
< 
< <p>
353,360c334,341
< Po zainstalowaniu źródeł wypada je skonfigurować. Zrobimy to automatycznie przy pomocy
< programu <c>genkernel</c>. <c>genkernel</c> robi to dokładnie w ten sam sposób w
< jaki jest konfigurowany kernel płyty instalacyjnej. Oznacza to, że kiedy użyjesz
< <c>genkernel</c> do budowy jądra Twój system będzie musiał wykrywać dostępny
< sprzęt przy każdym uruchomieniu komputera, tak jak na płycie instalacyjnej. Ponieważ genkernel
< nie wymaga od użytkownika żadnych ręcznych poprawek w konfiguracji jest
< doskonałym rozwiązaniem dla tych wszystkich, którzy nie są najmocniejsi w
< samodzielnym kompilowaniu jądra.
---
> Po zainstalowaniu źródeł wypada je skonfigurować. Zrobimy to automatycznie przy 
> pomocy programu <c>genkernel</c>. <c>genkernel</c> robi to dokładnie w ten sam
> sposób w jaki jest konfigurowany kernel płyty instalacyjnej. Oznacza to, że
> kiedy użyjesz <c>genkernel</c> do budowy jądra Twój system będzie musiał
> wykrywać dostępny sprzęt przy każdym uruchomieniu komputera, tak jak na płycie
> instalacyjnej. Ponieważ genkernel nie wymaga od użytkownika żadnych ręcznych
> poprawek w konfiguracji jest doskonałym rozwiązaniem dla tych wszystkich,
> którzy nie są najmocniejsi w samodzielnym kompilowaniu jądra.
364,365c345,346
< Zanim jednak zdradzimy jak używa się tego cudownego programu musimy wytłumaczyć jak go
< zainstalować:
---
> Zanim jednak zdradzimy jak używa się tego cudownego programu musimy wytłumaczyć
> jak go zainstalować:
426,428c407,410
< płycie instalacyjnej, zemergujemy sobie <c>coldplug</c>. Podczas gdy initrd automatycznie
< wykrywa sprzęt, co jest niezbędne do uruchomienia systemu, <c>coldplug</c>
< będzie wykrywał wszystko inne. Aby zemergować i uaktywnić <c>coldplug</c> wpisz:
---
> płycie instalacyjnej, zemergujemy sobie <c>coldplug</c>. Podczas gdy initrd 
> automatycznie wykrywa sprzęt, co jest niezbędne do uruchomienia systemu, 
> <c>coldplug</c> będzie wykrywał wszystko inne. Aby zemergować i uaktywnić 
> <c>coldplug</c> wpisz:
461,465c443,447
<     Zestaw sterowników dla kart ATI Radeon 9200, Rage128, Matrox, Voodoo i wielu innych
<     dla xorg-x11. Aby dowiedzieć się co należy wpisać w pole "moja_karta"
<     sprawdzamy zmienną <c>IUSE_VIDEO_CARDS</c> w jednym z plików ebuild z katalogu
<      <path>/usr/portage/x11-base/x11-drm</path>. W wydaniu 2004.3 zmieniono nazwę ebuildu
<      xfree-drm na x11-drm.
---
>     Zestaw sterowników dla kart ATI Radeon 9200, Rage128, Matrox, Voodoo i 
>     wielu innych dla xorg-x11. Aby dowiedzieć się co należy wpisać w pole 
>     "moja_karta" sprawdzamy zmienną <c>IUSE_VIDEO_CARDS</c> w jednym z plików
>     ebuild z katalogu <path>/usr/portage/x11-base/x11-drm</path>. W wydaniu 
>     2004.3 zmieniono nazwę ebuildu xfree-drm na x11-drm.
