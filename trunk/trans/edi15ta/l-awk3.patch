--- ../htdocs/doc/pl/articles/l-awk3.xml	2005-10-18 21:14:55.000000000 +0200
+++ l-awk3-pop.xml	2005-12-02 22:15:07.000000000 +0100
@@ -12,10 +12,9 @@
 </author>
 
 <abstract>
-W tej części serii artykułów Daniel Robbins kontynuuje odkrywanie awk,
-wspaniałego języka o dziwnej nazwie. Daniel pokaże jak obsługiwać rekordy
-zawarte w kilku wierszach, wykorzystywać pętle oraz tworzyć i używać tablice.
-Po przeczytaniu tego artykułu czytelnik powinien być zaznajomiony z szeroką gamą
+W ostatniej części serii artykułów o awk. Daniel pokaże jak obsługiwać rekordy
+zawarte w kilku wierszach, wykorzystywać pętle oraz tworzyć i używać tablice. Po
+przeczytaniu tego artykułu czytelnik powinien być zaznajomiony z szeroką gamą
 możliwości awk i być gotowym do pisania własnych, potężnych skryptów.
 </abstract>
 
@@ -24,8 +23,8 @@
 version of the original article, and contains various improvements made by the
 Gentoo Linux Documentation team -->
 
-<version>1.3</version>
-<date>2005-10-09</date>
+<version>1.4</version>
+<date>2005-10-31</date>
 
 <chapter>
 <title>Łańcuchy, funkcje i... książeczki czekowe?</title>
@@ -308,7 +307,7 @@
 
 <pre caption="Kod wypisujący długość wszystkich wierszy pliku">
 {
-    print length() 
+    print length()
 }
 </pre>
 
@@ -452,15 +451,15 @@
 </p>
 
 <pre caption="Zapisywanie informacji o przychodach i dochodach">
-                
+
 function doincome(mybalance) {
     mybalance[curmonth,$3] += amount
-    mybalance[0,$3] += amount        
+    mybalance[0,$3] += amount
 }
 
 function doexpense(mybalance) {
     mybalance[curmonth,$2] -= amount
-    mybalance[0,$2] -= amount        
+    mybalance[0,$2] -= amount
 }
 
 function dotransfer(mybalance) {
@@ -501,11 +500,11 @@
 </p>
 
 <pre caption="Bilans, część trzecia">
-                
+
 {
     curmonth=monthdigit(substr($1,4,3))
     amount=$7
-      
+
     #record all the categories encountered
     if ( $2 != "-" )
         globcat[$2]="yes"
@@ -515,7 +514,8 @@
     #tally up the transaction properly
     if ( $2 == "-" ) {
         if ( $3 == "-" ) {
-            print "Błąd: pola kategorii zarówno dochodów jak i przychodów są puste!"
+            print "Błąd: pola kategorii zarówno dochodów jak i przychodów są
+puste!"
             exit 1
         } else {
             #this is income
@@ -524,16 +524,16 @@
                 doincome(balance2)
         }
     } else if ( $3 == "-" ) {
-        #this is an expense 
+        #this is an expense
         doexpense(balance)
-        if ( $5 == "Y" ) 
+        if ( $5 == "Y" )
             doexpense(balance2)
     } else {
         #this is a transfer
         dotransfer(balance)
-        if ( $5 == "Y" ) 
+        if ( $5 == "Y" )
             dotransfer(balance2)
-    }                        
+    }
 }
 </pre>
 
@@ -585,13 +585,13 @@
 <pre caption="Generowanie raportu końcowego">
 END {
     bal=0
-    bal2=0        
+    bal2=0
     for (x in globcat) {
         bal=bal+balance[0,x]
-        bal2=bal2+balance2[0,x]    
+        bal2=bal2+balance2[0,x]
     }
     printf("Dostępne fundusze: %10.2f\n", bal)
-    printf("Bilans konta:      %10.2f\n", bal2)        
+    printf("Bilans konta:      %10.2f\n", bal2)
 }
 </pre>
 
@@ -667,12 +667,11 @@
   <li>
     <uri link="http://sparky.rice.edu/~hartigan/awk.html">Samouczek AWK</uri>
     Patricka Hartigana zawiera mnóstwo przydatnych skryptów</li>
-<!-- FIXME 404 - i looked around google for it, no success
   <li>
     <uri link="http://www.teleport.com/~thompson">Thompson's TAWK Compiler</uri>
-    compiles awk scripts into fast binary executables. Versions are available
-    for Windows, OS/2, DOS, and UNIX.
-  </li>-->
+    kompiluje skrypty awk czyniąc z nich szybkie binarki. Jest on dostępny w
+wersjach dla Windows, OS/2, DOS i UNIX.
+  </li>
   <li>
     <uri link="http://www.gnu.org/software/gawk/manual/gawk.html">Podręcznik
     użytkownika GNU Awk</uri> zawiera informator.
