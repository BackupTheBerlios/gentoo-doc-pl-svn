<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/articles/samba-p2.xml,v 1.1 2005/10/09 18:31:43 rane Exp $ -->

<guide link="/doc/pl/articles/samba-p2.xml" disclaimer="articles" lang="pl">
<title>Wprowadzenie do Samby, Część druga</title>

<author title="Author">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Tłumaczenie">
  <mail link="jbozanowski@gmail.com">Kuba Bożanowski</mail>
</author>
<!-- <author title="Editor">
  <mail link="jackdark@gmail.com">Joshua Saddler</mail>
</author> -->

<abstract>
W poprzednim artykule Daniel wprowadził nas w możliwości Samby. Teraz nadszedł
czas na jej instalację i konfigurację na naszym komputerze. W niniejszym
artykule autor poprowadzi nas przez proces kompilacji, instalacji i początkowej
konfiguracji Samby (w wersji 2.0.7) aby poprawnie funkcjonowała w naszym własnym
środowisku.
</abstract>

<!-- The original version of this article was first published on IBM
developerWorks, and is property of Westtech Information Services. This document
is an updated version of the original article, and contains various improvements
made by the Gentoo Linux Documentation team -->

<version>1.0</version>
<date>2005-10-06</date>

<chapter>
<title>Kompilowanie, instalowanie i konfigurowanie Samby w naszym środowisku</title>
<section>
<title>Pobieranie Samby</title>
<body>

<p>
Zacznijmy od pobrania źródeł Samby w wersji 2.0.7 lub nowszej ze strony
Samba.org (link w dziale <uri link="#resources">Zasoby</uri> pod koniec
artykułu).
</p>

<note>
Będziemy instalować Sambę od podstaw ze źródeł, równie dobrze jednak możemy to
zrobić za pomocą menadżera pakietów naszej dystrybucji (na przykład RPM).
Wówczas, jak już wspomniałem w poprzednim artykule, położenia niektórych plików
mogą się różnić z opisanymi tutaj.
</note>

<p>
Po pobraniu Samby w wersji 2.0.7 lub nowszej. czas rozpakować źródła do dowolnego
katalogu. Wydajmy następujące polecenie w wierszu poleceń:
</p>

<pre caption="Rozpakowanie źródeł">
$ <i>tar -xzvf samba-2.0.7.tar.gz</i>
</pre>

<p>
Zostanie utworzony katalog <path>samba-2.0.7</path>. Przejdźmy do niego
poleceniem <c>cd</c> i rozejrzyjmy się. Przede wszystkim należy zwrócić uwagę na
katalog docs. Wewnątrz znajdziemy podkatalog o nazwie <path>textdocs</path>,
który zawiera sporą część dokumentacji Samby. Jednym z najważniejszych plików,
jakie można w nim znaleźć to DIAGNOSIS.txt. Poprowadzi on nas przez proces
diagnozy ewentualnych problemów z Sambą. Omówimy część z opisanych w nim
procedur.
</p>

</body>
</section>
<section>
<title>Kompilowanie i instalowanie Samby</title>
<body>

<p>
Zauważmy też katalog o nazwie <path>sources</path> w głównym katalogu
<path>samba-2.0.7</path>. Wewnątrz znajdziemy dobrze napisany skrypt configure,
stworzony z myślą o poprawnym utworzeniu wszystkich plików Makefile. Jak w
przypadku każdego innego skryptu configure, listę opcji konfiguracji uzyskujemy
pisząc:
</p>

<pre caption="Poznawanie opcji">
$ <i>./configure --help</i>
</pre>

<p>
Najlepiej będzie przekierować wyjście do polecenia <c>more</c> aby móc przejrzeć
wszystkie opcje:
</p>

<pre caption="Więcej opcji">
$ <i>./configure --help | more</i>
</pre>

<p>
Zwróćmy uwagę na opcje dotyczące katalogów i nazw plików. Domyślną ścieżką
instalacji jest <path>/usr/local/samba</path>. Najlepiej będzie zmienić ją na
<path>/usr/local</path>, przekazując parametr <c>--prefix=/usr/local</c> do
skryptu configure. Na potrzeby niniejszego artykułu użyję następujących ustawień
ścieżek:
</p>

<pre caption="Konfiguracja katalogów">
$ <i>./configure --prefix=/usr/local --localstatedir=/var/log --sysconfdir=/etc</i>
</pre>

<p>
Powyższe opcje spowodują instalację domyślnego drzewa katalogów Samby do
katalogu <path>/usr/local</path>, z wyjątkiem plików konfiguracyjnych, które
znajdą się w katalogu <path>/etc</path>, oraz logów, których Samba spodziewa się
w katalogu <path>/var/log</path>. Jeśli pominiemy powyższe opcje, wszystkie te
katalogi znajdą się w drzewie <path>/usr/local/samba</path>
(<path>/usr/local/samba/var</path>, <path>/usr/local/samba/etc</path>, itd.).
</p>

<p>
Nadszedł czas na kompilację. Po uruchomieniu skryptu <c>configure</c> napiszmy:
</p>

<pre caption="Kompilacja Samby">
$ <i>make</i>
</pre>

<p>
Po zakończeniu procesu kompilacji należy zainstalować całość, pisząc poniższe
polecenie jako użytkownik root:
</p>

<pre caption="Instalowanie Samby">
# <i>make install</i>
</pre>

</body>
</section>
<section>
<title>Konfigurowanie serwera</title>
<body>

<p>
W większości sytuacji konfigurowanie Samby sprowadza się do edycji pliku
<path>smb.conf</path>, jako że jest to główny plik konfiguracyjny Samby. Posiada on
wiele różnych opcji, dlatego aby uniknąć zamieszania zaczniemy jedynie od tych,
które są niezbędne do poprawnego działania oprogramowania. Przede wszytkim
musimy dowiedzieć się gdzie powinniśmy umieścić plik <path>smb.conf</path>.
Jeśli użyliśmy powyższych parametrów do skryptu configure, należy umieścić go w
katalogu <path>/etc</path>. Gdybyśmy jednak użyli domyślnych ścieżek, Samba
będzie szukać tego pliku w katalogu <path>/usr/local/samba/etc</path>. Zacznijmy
przechodząc do odpowiedniego katalogu, uruchamiając nasz ulubiony edytor
tekstu i pisząc następujące linijki. Poniżej dodam komentarz do każdej
linijki aby łatwiej było zrozumieć co każda z nich robi.
</p>

<pre caption="smb.conf">
[global] 
workgroup = NASZAGRUPAROBOCZA 
security = user 
encrypt passwords = yes 
guest account = guest
</pre>

<p>
Pierwsza linijka informuje Sambę, że umieszczamy opcje w sekcji "global".
Istnieje wiele opcji, które należy definiować tylko w tej sekcji. Opcje te
sterują ogólnym zachowaniem Samby.
</p>

<p>
Druga linijka podaje Sambie nazwę grupy roboczej, którą ma utworzyć. Należy
zamienić NASZAGRUPAROBOCZA właściwą dla nas nazwą.
</p>

<p>
W trzeciej linijce instruujemy Sambę aby pracowała w trybie bezpieczeństwa
użytkownika. Dzięki tej opcji Samba poinformuje wszystkie klienty Windows o
konieczności podania właściwej nazwy użytkownika i hasła w celu uzyskania
dostępu do jakiegokolwiek zasobu sieciowego. Jest to bardzo dobre rozwiązanie.
Bezpieczeństwo w trybie użytkownika jest najczęściej wykorzystywanym trybem
bezpieczeństwa Samby, ponieważ najlepiej odpowiada większości scenariuszy
udostępniania plików. Dostępne są jednakże inne tryby. W jednym z nich Samba
uwierzytelnia użytkowników na podstawie bazy danych bezpieczeństwa z istniejącej
instalacji Windows NT lub 2000 Server. Nie będziemy jednak omawiać go w tym
artykule. Więcej informacji na jego temat można znaleźć w FIXME (rzeczywiście
chodzi o man?) sekcji "security" podręcznika systemowego man do pliku
<path>smb.conf</path>.
</p>

<p>
Kolej na czwartą linijkę. W tym miejscu instruujemy Sambę aby wymiana haseł
odbywała się w trybie szyfrowanym. Z tej opcji należy korzystać w każdej
sytuacji, z wyjątkiem gdy wszystkie nasze komputery są bardzo stare (na przykład
z systemami z czasów Windows for Workgroups). Włączenie szyfrowanych haseł
powoduje, że Samba oprócz standardowej uniksowej bazy danych passwd
potrzebuje własnego pliku z hasłami. Nie należy jednak sądzić, że wyłączenie tej
opcji ułatwi nam życie, gdyż będziemy musieli zajmować się tylko jednym plikiem.
Wyłączenie szyfrowanych haseł spowoduje problemy z udostępnianiem zasobów nawet
pod relatywnie starymi systemami Windows NT 4.0 (nie wspominając o Windows
2000). Samba dostarcza nam wiele sposobów na synchronizowanie obu baz danych,
jeśli nie chcemy się opiekować nimi osobno. Jest to zdecydowanie lepsze
rozwiązanie niż wyłączanie szyfrowania.
</p>

<p>
Kolejna linijka podaje konto użytkownika systemu Unix, które zostanie
wykorzystane do dostępu gościa. Mimo iż częstą praktyką jest podawanie "guest
account=nobody", sugeruję dodanie użytkownika "guest" do systemu, o ile jeszcze
go nie ma. Konto to nie potrzebuje hasła i nie trzeba umożliwiać interaktywnego
logowania się na nie (aczkolwiek nic się nie stanie jeśli nadamy mu hasło i
domyślną powłokę systemową).
</p>

<p>
Teraz można już dodać obsługę WINS w pliku <path>smb.conf</path>. W tym celu
należy dodać jedną z poniższych dwóch linijek w sekcji "global":
</p>

<pre caption="Obsługa WINS">
wins support = yes
</pre>

<p>
LUB
</p>

<pre caption="Adres IP WINS">
wins server = adres IP serwera WINS
</pre>

<p>
Jeśli posiadamy już serwer WINS w naszej podsieci (na przykład WINS działający
pod systemem Windows NT Server), będziemy chcieli użyć drugiej opcji i podać
adres IP tego serwera po prawej stronie znaku równości. Wewnętrzna usługa WINS
Samby zostanie wówczas wyłączona i zostanie użyty podany serwer WINS. 
</p>

<p>
Jeśli nie posiadamy osobnego serwera WINS lub konfigurujemy Sambę w domu i
nie orientujemy się nawet czym jest serwer WINS, powinniśmy wybrać pierwszą
opcję. Samba wówczas sama będzie pełnić rolę takiego serwera w naszej sieci
LAN.
</p>

<p>
Być może zadajemy sobie pytanie jaką funkcję pełni serwer WINS. Ogólnie rzecz
biorąc jest to lokalna dynamiczna baza danych DNS. Gdy Samba pracuje jako serwer
WINS, każdy komputer kompatybilny z Windows w naszej podsieci zarejestruje w
Sambie swój adres IP i nazwę NetBIOS (czyli potocznie FIXME "nazwę komputera").
Dzięki temu komputery Windows będą korzystać z bazy danych WINS w Sambie w celu
uzyskania adresu IP komputera o danej nazwie NetBIOS. WINS to kluczowy składnik
przeglądania sieci i to właśnie z niego korzystamy, gdy rozglądamy się po
Otoczeniu Sieciowym systemu Windows.
</p>

<p>
Możemy teraz dodać kilka kolejnych opcji do globalnej sekcji:
</p>

<pre caption="Konfiguracja przeglądania sieci">
local master = yes 
os level = 99 
domain master = yes 
preferred master = yes
</pre>

<p>
Czas na wyjaśnienia. Wszystkie te opcje są związane z przeglądaniem sieci. Już
wspomnieliśy że WINS jest kluczowym składnikiem tego zagadnienia, istnieje
jednak kolejny element wymagany do poprawnego działania przeglądania sieci. Musi
istnieć główna lokalna przeglądarka (ang. local master browser). Brzmi to dość
dziwnie, czas więc na wyjaśnienia.
</p>

<p>
Aby przeglądanie sieci działało poprawnie, musi istnieć jakieś główne miejsce, w
którym zapisane jest jakie komputery i grupy robocze są przyłączone do lokalnej
podsieci. Taka lista określana jest mianem listy przeglądania (ang. browse
list). Na podstawie tej listy konstruowana jest lista grup roboczych, domen i
komputerów, które zobaczymy, gdy po raz pierwszy klikniemy na ikonie Otoczenia
Sieciowego. Każdy komputer ze współczesnym systemem Windows może pełnić rolę
głównej lokalnej przeglądarki, my chcielibyśmy jednak aby w naszej sieci tę
rolę pełniła Samba. 
</p>

<p>
Jak tego dokonamy? Ujmując rzecz jak najprościej, wszystkie komputery z systemem
Windows w naszej podsieci toczą ze sobą bitwy wysyłając pakiety tam i z powrotem
między sobą, próbując określić który z nich stanie się główną lokalną
przeglądarką. Proces ten nazywa się "wyborami przeglądarki" (ang. browser
election).
</p>

<note>
Nie bądźmy okrutni. Nie powinniśmy wykorzystywać faktu, iż Samba potrafi pokonać
systemy Windows w każdych wyborach przeglądarki, w celu nabijania się z
administratorów systemów Microsoft w naszych biurach. Pamiętajmy, że wygrywać
też trzeba umieć.
</note>

<p>
Zwycięzca tej "wojny" na pakiety zostaje lokalną główną przeglądarką. Możemy
spowodować każdorazowe zwycięstwo Samby w tych zmaganiach dzięki opcji <c>os
level = 99</c>. Dzieje się tak, gdyż każda wersja systemu Windows (od Windows
95, przez NT, aż po 2000) posiada zapisany na stałe numer systemu operacyjnego,
dzięki czemu przeglądarką powinna zostać najnowsze wydanie tego systemu.
Ustawienie tej opcji na 99 spodowuje pokonanie przez Sambę każdego produktu
firmy Microsoft, dzięki czemu za każdym razem zostanie ona główną lokalną
przeglądarką.
</p>

</body>
</section>
<section>
<title>Opcje bezpieczeństwa</title>
<body>

<p>
Zanim opuścimy sekcję globalną, powinniśmy zainteresować się kilkoma opcjami
bezpieczeństwa. Opcja <c>allow</c> hosta pozwala nam ograniczyć adresy IP,
którym zezwalamy na połączenia z Sambą:
</p>

<pre caption="Dopuszczone adresy IP">
hosts allow = 192.168.1. 127.
</pre>

<p>
Dzięki tej opcji jedynie komputery z podsieci o adresie <b>192.168.1</b>, oraz
<b>127</b> (localhost) będą mogły nawiązać połączenie z Sambą. Należy się zawsze
upewnić, że dodajemy <b>127.</b> na końcu linijki hosts allow.
</p>

<p>
The interfaces option is very useful if your machine happens to have multiple
network interfaces. It allows you to specify the network interfaces on which
Samba is available. It is used as follows:
</p>

<pre caption="Specifying interfaces">
interfaces = eth1
</pre>

<p>
This is an easy way to limit Samba to the necessary interfaces. And limiting
the interfaces prevents possible hacking attempts from unwanted users.
</p>

</body>
</section>
<section>
<title>A test share</title>
<body>

<p>
Now that we've configured Samba's global options, it's time to create a test
share that will allow us to access the <path>/tmp</path> directory. Add the
following lines:
</p>

<pre caption="Setting the /tmp directory">
[tmp] 
path=/tmp 
writeable=yes
</pre>

<p>
When Samba is started, these settings will make a share available called
<c>tmp</c>. This share will contain the contents of your <path>/tmp</path>
directory on your Samba server. Also, if a particular user has write permission
in <path>/tmp</path>, as almost all do, that user will be able to create and
modify files in that directory.
</p>

<p>
Now that we've added all these entries to <path>smb.conf</path>, it's time to
verify that our configuration is correct. To do this, we'll use the
<c>testparm</c> utility:
</p>

<pre caption="Using testparm">
$ testparm
</pre>

<p>
A list of all your configuration options will be listed to the screen after you
hit Enter. Any errors in <path>smb.conf</path> will also be noted and commented
upon at this point. If there are any errors, follow the instructions on-screen
to fix them. Now we're ready to configure Samba users and fire up Samba for the
test run.
</p>

</body>
</section>
<section>
<title>Creating users</title>
<body>

<p>
In order for the "myuser" user with the "mypass" password to be able to use
Samba, the following things must exist:
</p>

<ol>
  <li>
    A valid <b>myuser</b> Unix account. <b>myuser</b> does not need to be able
    to log in, and <b>myuser</b>'s Unix password is not used by Samba, so you
    can set to a dummy value if you like. If <b>myuser</b> also logs in
    interactively to your Samba server, that's OK, too.
  </li>
  <li>
    A valid <b>myuser</b> entry in the <path>smbpasswd</path> file. The
    <path>smbpasswd</path> file is found in the directory called
    <path>private</path> that resides in the default Samba install prefix
    (<path>/usr/local/private</path> in this example).  <b>myuser</b> can be
    added to the <path>smbpasswd</path> file by using the <c>smbpasswd</c>
    command and by typing the following as root:
  </li>
</ol>

<pre caption="Adding users">
# <i>smbpasswd -a myuser</i>
New SMB password: &lt;enter "mypass" here&gt;
Retype new SMB password: &lt;enter "mypass" again&gt;
Added user myuser.
</pre>

<p>
These steps must be repeated for every new Samba user. If you are Samba-enabling
an existing Unix account, remember to add the username and password to the
<path>smbpasswd</path> file. If you're adding a Windows-only user, remember that
in addition to adding the user to the <path>smbpasswd</path> file you'll also
need to create a valid Unix account with an identical username. In fact, you'll
need to create the Unix account first since <path>smbpasswd</path> won't add a
user unless the Unix account already exists.
</p>

<p>
Both accounts are needed because Samba uses the Unix account to set the proper
permissions on disk, while the <path>smbpasswd</path> file is used for
authentication purposes. If you are going to connect from Windows NT, you'll
want to create a Samba "administrator" user.
</p>

</body>
</section>
<section>
<title>Final server configuration</title>
<body>

<p>
We're almost ready to start Samba and configure the client machines.  But you
must first make sure that your Samba box can ping every Windows client machine
on your network, by name. If this doesn't work, you'll need to add some entries
to <path>/etc/hosts</path> or update your DNS so that your Samba box can
properly find your Windows machines.
</p>

<p>
It is also helpful to note that Samba works best when <path>/etc/hosts</path> is
set up so that only the "localhost" name maps to 127.0.0.1. The FQDN of your
machine should map to the primary IP address used on your LAN. For example:
</p>

<pre caption="/etc/hosts">
<comment>/etc/hosts excerpt</comment>

127.0.0.1       localhost 
192.168.1.1   mybox mybox.mydomain.com
</pre>

</body>
</section>
<section>
<title>Starting Samba</title>
<body>

<p>
Samba is now configured and ready to go. We'll start Samba and then focus on
configuring the Windows machines properly. To start Samba, type the following as
root:
</p>

<pre caption="Starting Samba">
# <i>smbd</i>
# <i>nmbd</i>
</pre>

<p>
This will start Samba's two main server processes, <c>smbd</c> and <c>nmbd</c>.
They will log any informational and error messages to
<path>/var/log/log.smb</path> and <path>/var/log/log.nmb</path>, respectively.
Now that the Unix side is up and running, it's time to turn to the client
machines and get them set up properly.
</p>

</body>
</section>
<section>
<title>Configuring client machines</title>
<body>

<p>
To configure a Windows machine so that it can participate in your Samba
Workgroup, you'll need to make sure the TCP/IP protocol is properly configured.
You must also make sure that:
</p>

<ol>
  <li>
    Your Windows machine can ping your Unix machine by name. (Type <c>ping
    myserver</c> at the C:\&gt; prompt.)
  </li>
  <li>
    Your Windows machine is configured to use a WINS server. If Samba is
    providing WINS services, this should be set to the IP of your Samba box. If
    not, it should be set to the IP of a valid WINS server. This setting is
    normally found inside the TCP/IP settings dialog.
  </li>
  <li>Your Windows machine is a member of YOURWORKGROUP.</li>
</ol>

</body>
</section>
<section>
<title>Testing it out</title>
<body>

<p>
Now is the moment of truth. After your Windows machines have finished rebooting,
you'll need to log on to Windows using a username/password that will be accepted
by Samba. If you're using Windows 95/98, this username/password combo will be
simply stored in a file and used later when you try to connect to any network
resource.
</p>

<p>
If you are using Windows NT Workstation, this username/password combo must also
be in the NT's local security database (otherwise you won't be able to initially
log in to NT). To do this, log on to NT as administrator and create the account
using User Manager. Afterwards, log out and log in as the new user.
</p>

<p>
After you've properly logged in, double-click on the Network Neighborhood and
take a look at the YOURWORKGROUP workgroup. Look inside. See if your Samba
server is listed. Double-click on it and see if the <path>/tmp</path> share is
listed. If so, congratulations!  Samba is working! If not, here are some things
to check:
</p>

<ol>
  <li>
    Run <c>testparm</c>. Is your <path>smb.conf</path> OK? If not, fix the
    problem and restart Samba.
  </li>
  <li>
    Are <c>smbd</c> and <c>nmbd</c> running? If not, check the log files for
    possible errors, correct any issues, and restart <c>smbd</c> and
    <c>nmbd</c>.
  </li>
  <li>
    Did you configure your Windows client machines to use a proper WINS server?
    If not, they will have problems looking up the IP addresses of machines on
    your network.
  </li>
  <li>
    Can you ping the Unix machine from Windows and vice-versa? If not, you'll
    need to configure your <path>/etc/hosts</path> file or DNS so that name
    resolution is working properly.
  </li>
</ol>

<p>
If all these things check out and Samba is still not working, carefully follow
each step in the DIAGNOSIS.txt file found in the <path>docs/textdocs</path>
directory. You should be able to pinpoint and fix your configuration or network
problem within minutes. If you change <path>smb.conf</path> in any way, you'll
need to send <c>smbd</c> and <c>nmbd</c> a HUP signal to force them to reread
<path>smb.conf</path>. This is done as follows:
</p>

<pre caption="Troubleshooting">
# <i>kill -hup &lt;pid of smbd&gt;</i>
# <i>kill -hup &lt;pid of nmbd&gt;</i>
</pre>

<p>
Alternately, you can simply kill <c>smbd</c> and <c>nmbd</c> and restart them
again.
</p>

</body>
</section>
<section>
<title>Next time</title>
<body>

<p>
In my <uri link="/doc/en/articles/samba-p3.xml">next Samba article</uri> I'll
familiarize you with Samba's more advanced options. Then you'll be able to set
up shares that function exactly the way you want them to. We'll also look at
several advanced features of Samba, like Samba printing. I'll see you then!
</p>

</body>
</section>
<section id="resources">
<title>Resources</title>
<body>

<ul>
  <li>The main <uri link="http://fi.samba.org">Samba</uri> web site</li>
  <li>
    <uri link="http://www.kampsax.dtu.dk/~rask/Samba/mailinglist/">Amiga
    Samba</uri> mailing list
  </li>
  <li><uri link="http://linuxguy.net/samba.htm">Samba</uri> by Ed Weinberg</li>
  <li>
    <uri link="http://www.amazon.com/exec/obidos/ASIN/0672318628/">Samba
    Unleashed</uri>>, by Steve Litt, with contributions from Daniel Robbins
  </li>
  <li>
    <uri link="http://www.oreilly.com/catalog/samba/">Using Samba</uri>
    (O'Reilly Publishing; 1999)
  </li>
  <li>
    <uri link="http://www.mdb.ku.dk/tarvin/samba/">Samba Notes</uri> on Samba
    and Redhat
  </li>
  <li>
    The <uri link="http://fi.samba.org/docs/swat_ssl.html">SWAT</uri> main
    page
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
